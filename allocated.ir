__global_init {
	__global_init_1_block_exit
}
min a(rdi) b(rsi) {
	min_0_block_enter
		cmp a(rdi) b(rsi)
		CJump LEEQ min_1_if_true
		ret b(rsi)
		jump min_4_block_exit
	min_1_if_true
		ret a(rdi)
		jump min_4_block_exit
	min_3_if_exit
		ret b(rsi)
	min_4_block_exit
}
main {
	main_0_block_enter
		x(rsi) = mov 10
		y(rdi) = mov 20
		b(r8) = mov y(rdi)
		cmp a(rsi) b(r8)
		set LEEQ t7(rdi)
		cmp t7(rdi) 1
		CJump EQ main_6_inline_exit
		t3(rsi) = mov b(r8)
		ret t3(rsi)
		jump main_1_block_exit
	main_2_inline_enter
		cmp a(rsi) b(r8)
		set LEEQ t7(rdi)
		cmp t7(rdi) 1
		CJump EQ main_6_inline_exit
		t3(rsi) = mov b(r8)
		ret t3(rsi)
		jump main_1_block_exit
	main_5_if_exit
		t3(rsi) = mov b(r8)
		ret t3(rsi)
		jump main_1_block_exit
	main_6_inline_exit
		ret t3(rsi)
	main_1_block_exit
}
