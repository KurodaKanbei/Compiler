__global_init {
	__global_init_0_block_enter
		jump __global_init_1_block_exit
	__global_init_1_block_exit
}
foo d(r12) x(rsi) y(rbx) {
	foo_0_block_enter
		d(r12) = mov t0(rdi)
		x(rsi) = mov t1(rsi)
		y(rbx) = mov t2(rdx)
		t3(r8) = mov d(r12)
		t3(r8) = t3(r8) MUL 1000
		t4(rdi) = mov x(rsi)
		t4(rdi) = t4(rdi) MUL 10
		t5(r8) = mov t3(r8)
		t5(r8) = t5(r8) ADD t4(rdi)
		t6(rdi) = mov t5(r8)
		t6(rdi) = t6(rdi) ADD y(rbx)
		t8(rdi) = mov t6(rdi)
		call toString return value = t7(rax)
		t10(rdi) = mov t7(rax)
		call println return value = null
		cmp d(r12) 1
		set EQ t11(rdi)
		cmp t11(rdi) 1
		CJump EQ foo_1_if_true
		jump foo_2_if_false
	foo_1_if_true
		jump foo_4_block_exit
	foo_2_if_false
		jump foo_3_if_exit
	foo_3_if_exit
		t(rdi) = mov x(rsi)
		x(rsi) = mov y(rbx)
		y(rbx) = mov t(rdi)
		t12(rdi) = mov 1
		t13(rsi) = mov x(rsi)
		t14(rdx) = mov y(rbx)
		call foo return value = null
		t15(rdi) = mov d(r12)
		t15(rdi) = t15(rdi) MUL 1000
		t16(rsi) = mov x(rsi)
		t16(rsi) = t16(rsi) MUL 10
		t17(rdi) = mov t15(rdi)
		t17(rdi) = t17(rdi) ADD t16(rsi)
		t18(rsi) = mov t17(rdi)
		t18(rsi) = t18(rsi) ADD y(rbx)
		t20(rdi) = mov t18(rsi)
		call toString return value = t19(rax)
		t22(rdi) = mov t19(rax)
		call println return value = null
		jump foo_4_block_exit
	foo_4_block_exit
}
main {
	main_0_block_enter
		d(r12) = mov 7
		x(rsi) = mov 5
		y(rbx) = mov 3
		jump main_2_inline_enter
	main_2_inline_enter
		t26(r8) = mov d(r12)
		t26(r8) = t26(r8) MUL 1000
		t27(rdi) = mov x(rsi)
		t27(rdi) = t27(rdi) MUL 10
		t28(r8) = mov t26(r8)
		t28(r8) = t28(r8) ADD t27(rdi)
		t29(rdi) = mov t28(r8)
		t29(rdi) = t29(rdi) ADD y(rbx)
		t31(rdi) = mov t29(rdi)
		call toString return value = t30(rax)
		t33(rdi) = mov t30(rax)
		call println return value = null
		cmp d(r12) 1
		set EQ t34(rdi)
		cmp t34(rdi) 1
		CJump EQ main_3_if_true
		jump main_4_if_false
	main_3_if_true
		jump main_6_inline_exit
	main_4_if_false
		jump main_5_if_exit
	main_5_if_exit
		t(rdi) = mov x(rsi)
		x(rsi) = mov y(rbx)
		y(rbx) = mov t(rdi)
		d(r12) = mov 1
		x(rsi) = mov x(rsi)
		y(rbx) = mov y(rbx)
		jump main_7_inline_enter
	main_7_inline_enter
		t46(r8) = mov d(r12)
		t46(r8) = t46(r8) MUL 1000
		t47(rdi) = mov x(rsi)
		t47(rdi) = t47(rdi) MUL 10
		t48(r8) = mov t46(r8)
		t48(r8) = t48(r8) ADD t47(rdi)
		t49(rdi) = mov t48(r8)
		t49(rdi) = t49(rdi) ADD y(rbx)
		t51(rdi) = mov t49(rdi)
		call toString return value = t50(rax)
		t53(rdi) = mov t50(rax)
		call println return value = null
		cmp d(r12) 1
		set EQ t54(rdi)
		cmp t54(rdi) 1
		CJump EQ main_8_if_true
		jump main_9_if_false
	main_8_if_true
		jump main_11_inline_exit
	main_9_if_false
		jump main_10_if_exit
	main_10_if_exit
		t(rdi) = mov x(rsi)
		x(rsi) = mov y(rbx)
		y(rbx) = mov t(rdi)
		t55(rdi) = mov 1
		t56(rsi) = mov x(rsi)
		t57(rdx) = mov y(rbx)
		call foo return value = null
		t58(r8) = mov d(r12)
		t58(r8) = t58(r8) MUL 1000
		t59(rdi) = mov x(rsi)
		t59(rdi) = t59(rdi) MUL 10
		t60(r8) = mov t58(r8)
		t60(r8) = t60(r8) ADD t59(rdi)
		t61(rdi) = mov t60(r8)
		t61(rdi) = t61(rdi) ADD y(rbx)
		t63(rdi) = mov t61(rdi)
		call toString return value = t62(rax)
		t65(rdi) = mov t62(rax)
		call println return value = null
		jump main_11_inline_exit
	main_11_inline_exit
		t38(rdi) = mov d(r12)
		t38(rdi) = t38(rdi) MUL 1000
		t39(rsi) = mov x(rsi)
		t39(rsi) = t39(rsi) MUL 10
		t40(rdi) = mov t38(rdi)
		t40(rdi) = t40(rdi) ADD t39(rsi)
		t41(rsi) = mov t40(rdi)
		t41(rsi) = t41(rsi) ADD y(rbx)
		t43(rdi) = mov t41(rsi)
		call toString return value = t42(rax)
		t45(rdi) = mov t42(rax)
		call println return value = null
		jump main_6_inline_exit
	main_6_inline_exit
		ret 0
		jump main_1_block_exit
	main_1_block_exit
}
