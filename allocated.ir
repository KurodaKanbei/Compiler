__global_init {
	__global_init_1_block_exit
}
main {
	main_0_block_enter
		t1(rsi) = mov 10
		INC t1(rsi)
		t1(rsi) = t1(rsi) SHL 3
		malloc t0(rsi) t1(rsi)
		Address (t0(rsi) + 0) = mov 10
		t0(rsi) = t0(rsi) ADD 8
		a(r8) = mov t0(rsi)
		i(r12) = mov 0
		cmp i(r12) 10
		CJump LE main_2_loop_body
		i(r12) = mov 0
		cmp i(r12) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_1_loop_condition
		cmp i(r12) 10
		CJump LE main_2_loop_body
		i(r12) = mov 0
		cmp i(r12) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_2_loop_body
		t3(rsi) = mov i(r12)
		t3(rsi) = t3(rsi) SHL 3
		t4(rbx) = mov a(r8)
		Address (t4(rbx) + t3(rsi)) = mov i(r12)
		INC i(r12)
		cmp i(r12) 10
		CJump LE main_2_loop_body
		i(r12) = mov 0
		cmp i(r12) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_3_loop_increment
		INC i(r12)
		cmp i(r12) 10
		CJump LE main_2_loop_body
		i(r12) = mov 0
		cmp i(r12) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_4_loop_exit
		i(r12) = mov 0
		cmp i(r12) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_5_loop_condition
		cmp i(r12) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_6_loop_body
		t7(rsi) = mov i(r12)
		t7(rsi) = t7(rsi) SHL 3
		t8(rbx) = mov a(r8)
		t10(rdi) = mov Address (t8(rbx) + t7(rsi))
		call toString return value = t9(rax)
		t12(rdi) = mov t9(rax)
		call println return value = null
		INC i(r12)
		cmp i(r12) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_7_loop_increment
		INC i(r12)
		cmp i(r12) 10
		CJump LE main_6_loop_body
	main_9_block_exit
}
