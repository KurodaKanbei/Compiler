search x(r8) y(r9) z(r12) {
	search_0_block_enter
		x(r8) = mov t27(rdi)
		y(r9) = mov t28(rsi)
		z(r12) = mov t29(rdx)
		cmp y(r9) 0
		set GR t33(rsi)
		cmp t33(rsi) 1
		CJump EQ search_1_logical_true
		jump search_2_logical_false
	search_1_logical_true
		t32(rsi) = mov 1
		jump search_3_logical_exit
	search_2_logical_false
		cmp y(r9) 0
		set LE t34(rsi)
		t32(rsi) = mov t34(rsi)
		jump search_3_logical_exit
	search_3_logical_exit
		cmp t32(rsi) 1
		CJump EQ search_4_logical_true
		jump search_5_logical_false
	search_4_logical_true
		t31(rsi) = mov 1
		jump search_6_logical_exit
	search_5_logical_false
		cmp x(r8) 0
		set EQ t35(rsi)
		t31(rsi) = mov t35(rsi)
		jump search_6_logical_exit
	search_6_logical_exit
		cmp t31(rsi) 1
		CJump EQ search_7_logical_true
		jump search_8_logical_false
	search_7_logical_true
		t30(rsi) = mov 1
		jump search_9_logical_exit
	search_8_logical_false
		t36(rsi) = mov x(r8)
		t36(rsi) = t36(rsi) SUB 1
		t37(rsi) = mov t36(rsi)
		t37(rsi) = t37(rsi) SHL 3
		t38(rbx) = mov Address (make(@make) + 0)
		t38(rbx) = t38(rbx) ADD t37(rsi)
		t39(rdi) = mov 0
		t39(rdi) = t39(rdi) SHL 3
		t40(rsi) = mov Address (t38(rbx) + 0)
		t40(rsi) = t40(rsi) ADD t39(rdi)
		t41(rbx) = mov x(r8)
		t41(rbx) = t41(rbx) SUB 1
		t42(rdi) = mov t41(rbx)
		t42(rdi) = t42(rdi) SHL 3
		t43(rbx) = mov Address (make(@make) + 0)
		t43(rbx) = t43(rbx) ADD t42(rdi)
		t44(r13) = mov 1
		t44(r13) = t44(r13) SHL 3
		t45(rdi) = mov Address (t43(rbx) + 0)
		t45(rdi) = t45(rdi) ADD t44(r13)
		t46(rbx) = mov Address (t40(rsi) + 0)
		t46(rbx) = t46(rbx) ADD Address (t45(rdi) + 0)
		t47(rsi) = mov x(r8)
		t47(rsi) = t47(rsi) SUB 1
		t48(rsi) = mov t47(rsi)
		t48(rsi) = t48(rsi) SHL 3
		t49(rdi) = mov Address (make(@make) + 0)
		t49(rdi) = t49(rdi) ADD t48(rsi)
		t50(rsi) = mov 2
		t50(rsi) = t50(rsi) SHL 3
		t51(rdi) = mov Address (t49(rdi) + 0)
		t51(rdi) = t51(rdi) ADD t50(rsi)
		t52(rsi) = mov t46(rbx)
		t52(rsi) = t52(rsi) ADD Address (t51(rdi) + 0)
		cmp t52(rsi) 15
		set EQ t53(rsi)
		t30(rsi) = mov t53(rsi)
		jump search_9_logical_exit
	search_9_logical_exit
		cmp t30(rsi) 1
		CJump EQ search_10_if_true
		jump search_71_if_false
	search_10_if_true
		cmp x(r8) 2
		set EQ t55(rsi)
		cmp t55(rsi) 1
		CJump NEQ search_12_logical_false
		jump search_11_logical_true
	search_11_logical_true
		cmp y(r9) 2
		set EQ t56(rsi)
		t54(rsi) = mov t56(rsi)
		jump search_13_logical_exit
	search_12_logical_false
		t54(rsi) = mov 0
		jump search_13_logical_exit
	search_13_logical_exit
		cmp t54(rsi) 1
		CJump EQ search_14_if_true
		jump search_44_if_false
	search_14_if_true
		t57(rbx) = mov 2
		t57(rbx) = t57(rbx) SHL 3
		t58(rsi) = mov Address (make(@make) + 0)
		t58(rsi) = t58(rsi) ADD t57(rbx)
		t59(rbx) = mov 2
		t59(rbx) = t59(rbx) SHL 3
		t60(rdi) = mov Address (t58(rsi) + 0)
		t60(rdi) = t60(rdi) ADD t59(rbx)
		t61(rsi) = mov 45
		t61(rsi) = t61(rsi) SUB z(r12)
		Address (t60(rdi) + 0) = mov t61(rsi)
		t62(rbx) = mov 0
		t62(rbx) = t62(rbx) SHL 3
		t63(rsi) = mov Address (make(@make) + 0)
		t63(rsi) = t63(rsi) ADD t62(rbx)
		t64(rbx) = mov 0
		t64(rbx) = t64(rbx) SHL 3
		t65(rsi) = mov Address (t63(rsi) + 0)
		t65(rsi) = t65(rsi) ADD t64(rbx)
		t66(rbx) = mov 0
		t66(rbx) = t66(rbx) SHL 3
		t67(rdi) = mov Address (make(@make) + 0)
		t67(rdi) = t67(rdi) ADD t66(rbx)
		t68(r12) = mov 1
		t68(r12) = t68(r12) SHL 3
		t69(rbx) = mov Address (t67(rdi) + 0)
		t69(rbx) = t69(rbx) ADD t68(r12)
		t70(r12) = mov Address (t65(rsi) + 0)
		t70(r12) = t70(r12) ADD Address (t69(rbx) + 0)
		t71(rsi) = mov 0
		t71(rsi) = t71(rsi) SHL 3
		t72(rdi) = mov Address (make(@make) + 0)
		t72(rdi) = t72(rdi) ADD t71(rsi)
		t73(rbx) = mov 2
		t73(rbx) = t73(rbx) SHL 3
		t74(rsi) = mov Address (t72(rdi) + 0)
		t74(rsi) = t74(rsi) ADD t73(rbx)
		t75(rbx) = mov t70(r12)
		t75(rbx) = t75(rbx) ADD Address (t74(rsi) + 0)
		s(rdi) = mov t75(rbx)
		t82(rsi) = mov 1
		t82(rsi) = t82(rsi) SHL 3
		t83(rbx) = mov Address (make(@make) + 0)
		t83(rbx) = t83(rbx) ADD t82(rsi)
		t84(rsi) = mov 0
		t84(rsi) = t84(rsi) SHL 3
		t85(rbx) = mov Address (t83(rbx) + 0)
		t85(rbx) = t85(rbx) ADD t84(rsi)
		t86(rsi) = mov 1
		t86(rsi) = t86(rsi) SHL 3
		t87(r12) = mov Address (make(@make) + 0)
		t87(r12) = t87(r12) ADD t86(rsi)
		t88(rsi) = mov 1
		t88(rsi) = t88(rsi) SHL 3
		t89(r12) = mov Address (t87(r12) + 0)
		t89(r12) = t89(r12) ADD t88(rsi)
		t90(rbx) = mov Address (t85(rbx) + 0)
		t90(rbx) = t90(rbx) ADD Address (t89(r12) + 0)
		t91(rsi) = mov 1
		t91(rsi) = t91(rsi) SHL 3
		t92(r12) = mov Address (make(@make) + 0)
		t92(r12) = t92(r12) ADD t91(rsi)
		t93(r8) = mov 2
		t93(r8) = t93(r8) SHL 3
		t94(rsi) = mov Address (t92(r12) + 0)
		t94(rsi) = t94(rsi) ADD t93(r8)
		t95(rbx) = mov t90(rbx)
		t95(rbx) = t95(rbx) ADD Address (t94(rsi) + 0)
		cmp t95(rbx) s(rdi)
		set EQ t96(rsi)
		cmp t96(rsi) 1
		CJump NEQ search_16_logical_false
		jump search_15_logical_true
	search_15_logical_true
		t97(rbx) = mov 2
		t97(rbx) = t97(rbx) SHL 3
		t98(rsi) = mov Address (make(@make) + 0)
		t98(rsi) = t98(rsi) ADD t97(rbx)
		t99(r12) = mov 0
		t99(r12) = t99(r12) SHL 3
		t100(rbx) = mov Address (t98(rsi) + 0)
		t100(rbx) = t100(rbx) ADD t99(r12)
		t101(rsi) = mov 2
		t101(rsi) = t101(rsi) SHL 3
		t102(r12) = mov Address (make(@make) + 0)
		t102(r12) = t102(r12) ADD t101(rsi)
		t103(rsi) = mov 1
		t103(rsi) = t103(rsi) SHL 3
		t104(r12) = mov Address (t102(r12) + 0)
		t104(r12) = t104(r12) ADD t103(rsi)
		t105(r8) = mov Address (t100(rbx) + 0)
		t105(r8) = t105(r8) ADD Address (t104(r12) + 0)
		t106(rsi) = mov 2
		t106(rsi) = t106(rsi) SHL 3
		t107(rbx) = mov Address (make(@make) + 0)
		t107(rbx) = t107(rbx) ADD t106(rsi)
		t108(rsi) = mov 2
		t108(rsi) = t108(rsi) SHL 3
		t109(rbx) = mov Address (t107(rbx) + 0)
		t109(rbx) = t109(rbx) ADD t108(rsi)
		t110(rsi) = mov t105(r8)
		t110(rsi) = t110(rsi) ADD Address (t109(rbx) + 0)
		cmp t110(rsi) s(rdi)
		set EQ t111(rsi)
		t81(rsi) = mov t111(rsi)
		jump search_17_logical_exit
	search_16_logical_false
		t81(rsi) = mov 0
		jump search_17_logical_exit
	search_17_logical_exit
		cmp t81(rsi) 1
		CJump NEQ search_19_logical_false
		jump search_18_logical_true
	search_18_logical_true
		t112(rsi) = mov 0
		t112(rsi) = t112(rsi) SHL 3
		t113(rbx) = mov Address (make(@make) + 0)
		t113(rbx) = t113(rbx) ADD t112(rsi)
		t114(rsi) = mov 0
		t114(rsi) = t114(rsi) SHL 3
		t115(r12) = mov Address (t113(rbx) + 0)
		t115(r12) = t115(r12) ADD t114(rsi)
		t116(rsi) = mov 1
		t116(rsi) = t116(rsi) SHL 3
		t117(rbx) = mov Address (make(@make) + 0)
		t117(rbx) = t117(rbx) ADD t116(rsi)
		t118(rsi) = mov 0
		t118(rsi) = t118(rsi) SHL 3
		t119(rbx) = mov Address (t117(rbx) + 0)
		t119(rbx) = t119(rbx) ADD t118(rsi)
		t120(r12) = mov Address (t115(r12) + 0)
		t120(r12) = t120(r12) ADD Address (t119(rbx) + 0)
		t121(rsi) = mov 2
		t121(rsi) = t121(rsi) SHL 3
		t122(rbx) = mov Address (make(@make) + 0)
		t122(rbx) = t122(rbx) ADD t121(rsi)
		t123(rsi) = mov 0
		t123(rsi) = t123(rsi) SHL 3
		t124(rbx) = mov Address (t122(rbx) + 0)
		t124(rbx) = t124(rbx) ADD t123(rsi)
		t125(rsi) = mov t120(r12)
		t125(rsi) = t125(rsi) ADD Address (t124(rbx) + 0)
		cmp t125(rsi) s(rdi)
		set EQ t126(rsi)
		t80(rsi) = mov t126(rsi)
		jump search_20_logical_exit
	search_19_logical_false
		t80(rsi) = mov 0
		jump search_20_logical_exit
	search_20_logical_exit
		cmp t80(rsi) 1
		CJump NEQ search_22_logical_false
		jump search_21_logical_true
	search_21_logical_true
		t127(rsi) = mov 0
		t127(rsi) = t127(rsi) SHL 3
		t128(rbx) = mov Address (make(@make) + 0)
		t128(rbx) = t128(rbx) ADD t127(rsi)
		t129(rsi) = mov 1
		t129(rsi) = t129(rsi) SHL 3
		t130(r12) = mov Address (t128(rbx) + 0)
		t130(r12) = t130(r12) ADD t129(rsi)
		t131(rbx) = mov 1
		t131(rbx) = t131(rbx) SHL 3
		t132(rsi) = mov Address (make(@make) + 0)
		t132(rsi) = t132(rsi) ADD t131(rbx)
		t133(rbx) = mov 1
		t133(rbx) = t133(rbx) SHL 3
		t134(rsi) = mov Address (t132(rsi) + 0)
		t134(rsi) = t134(rsi) ADD t133(rbx)
		t135(r12) = mov Address (t130(r12) + 0)
		t135(r12) = t135(r12) ADD Address (t134(rsi) + 0)
		t136(rsi) = mov 2
		t136(rsi) = t136(rsi) SHL 3
		t137(rbx) = mov Address (make(@make) + 0)
		t137(rbx) = t137(rbx) ADD t136(rsi)
		t138(rsi) = mov 1
		t138(rsi) = t138(rsi) SHL 3
		t139(rbx) = mov Address (t137(rbx) + 0)
		t139(rbx) = t139(rbx) ADD t138(rsi)
		t140(rsi) = mov t135(r12)
		t140(rsi) = t140(rsi) ADD Address (t139(rbx) + 0)
		cmp t140(rsi) s(rdi)
		set EQ t141(rsi)
		t79(rsi) = mov t141(rsi)
		jump search_23_logical_exit
	search_22_logical_false
		t79(rsi) = mov 0
		jump search_23_logical_exit
	search_23_logical_exit
		cmp t79(rsi) 1
		CJump NEQ search_25_logical_false
		jump search_24_logical_true
	search_24_logical_true
		t142(rbx) = mov 0
		t142(rbx) = t142(rbx) SHL 3
		t143(rsi) = mov Address (make(@make) + 0)
		t143(rsi) = t143(rsi) ADD t142(rbx)
		t144(rbx) = mov 2
		t144(rbx) = t144(rbx) SHL 3
		t145(r12) = mov Address (t143(rsi) + 0)
		t145(r12) = t145(r12) ADD t144(rbx)
		t146(rbx) = mov 1
		t146(rbx) = t146(rbx) SHL 3
		t147(rsi) = mov Address (make(@make) + 0)
		t147(rsi) = t147(rsi) ADD t146(rbx)
		t148(rbx) = mov 2
		t148(rbx) = t148(rbx) SHL 3
		t149(rsi) = mov Address (t147(rsi) + 0)
		t149(rsi) = t149(rsi) ADD t148(rbx)
		t150(rbx) = mov Address (t145(r12) + 0)
		t150(rbx) = t150(rbx) ADD Address (t149(rsi) + 0)
		t151(r12) = mov 2
		t151(r12) = t151(r12) SHL 3
		t152(rsi) = mov Address (make(@make) + 0)
		t152(rsi) = t152(rsi) ADD t151(r12)
		t153(r12) = mov 2
		t153(r12) = t153(r12) SHL 3
		t154(rsi) = mov Address (t152(rsi) + 0)
		t154(rsi) = t154(rsi) ADD t153(r12)
		t155(rbx) = mov t150(rbx)
		t155(rbx) = t155(rbx) ADD Address (t154(rsi) + 0)
		cmp t155(rbx) s(rdi)
		set EQ t156(rsi)
		t78(rsi) = mov t156(rsi)
		jump search_26_logical_exit
	search_25_logical_false
		t78(rsi) = mov 0
		jump search_26_logical_exit
	search_26_logical_exit
		cmp t78(rsi) 1
		CJump NEQ search_28_logical_false
		jump search_27_logical_true
	search_27_logical_true
		t157(rsi) = mov 0
		t157(rsi) = t157(rsi) SHL 3
		t158(rbx) = mov Address (make(@make) + 0)
		t158(rbx) = t158(rbx) ADD t157(rsi)
		t159(rsi) = mov 0
		t159(rsi) = t159(rsi) SHL 3
		t160(r12) = mov Address (t158(rbx) + 0)
		t160(r12) = t160(r12) ADD t159(rsi)
		t161(rsi) = mov 1
		t161(rsi) = t161(rsi) SHL 3
		t162(rbx) = mov Address (make(@make) + 0)
		t162(rbx) = t162(rbx) ADD t161(rsi)
		t163(rsi) = mov 1
		t163(rsi) = t163(rsi) SHL 3
		t164(rbx) = mov Address (t162(rbx) + 0)
		t164(rbx) = t164(rbx) ADD t163(rsi)
		t165(r12) = mov Address (t160(r12) + 0)
		t165(r12) = t165(r12) ADD Address (t164(rbx) + 0)
		t166(rbx) = mov 2
		t166(rbx) = t166(rbx) SHL 3
		t167(rsi) = mov Address (make(@make) + 0)
		t167(rsi) = t167(rsi) ADD t166(rbx)
		t168(rbx) = mov 2
		t168(rbx) = t168(rbx) SHL 3
		t169(rsi) = mov Address (t167(rsi) + 0)
		t169(rsi) = t169(rsi) ADD t168(rbx)
		t170(rbx) = mov t165(r12)
		t170(rbx) = t170(rbx) ADD Address (t169(rsi) + 0)
		cmp t170(rbx) s(rdi)
		set EQ t171(rsi)
		t77(rsi) = mov t171(rsi)
		jump search_29_logical_exit
	search_28_logical_false
		t77(rsi) = mov 0
		jump search_29_logical_exit
	search_29_logical_exit
		cmp t77(rsi) 1
		CJump NEQ search_31_logical_false
		jump search_30_logical_true
	search_30_logical_true
		t172(rbx) = mov 2
		t172(rbx) = t172(rbx) SHL 3
		t173(rsi) = mov Address (make(@make) + 0)
		t173(rsi) = t173(rsi) ADD t172(rbx)
		t174(rbx) = mov 0
		t174(rbx) = t174(rbx) SHL 3
		t175(r12) = mov Address (t173(rsi) + 0)
		t175(r12) = t175(r12) ADD t174(rbx)
		t176(rsi) = mov 1
		t176(rsi) = t176(rsi) SHL 3
		t177(rbx) = mov Address (make(@make) + 0)
		t177(rbx) = t177(rbx) ADD t176(rsi)
		t178(rsi) = mov 1
		t178(rsi) = t178(rsi) SHL 3
		t179(rbx) = mov Address (t177(rbx) + 0)
		t179(rbx) = t179(rbx) ADD t178(rsi)
		t180(r12) = mov Address (t175(r12) + 0)
		t180(r12) = t180(r12) ADD Address (t179(rbx) + 0)
		t181(rsi) = mov 0
		t181(rsi) = t181(rsi) SHL 3
		t182(rbx) = mov Address (make(@make) + 0)
		t182(rbx) = t182(rbx) ADD t181(rsi)
		t183(rsi) = mov 2
		t183(rsi) = t183(rsi) SHL 3
		t184(rbx) = mov Address (t182(rbx) + 0)
		t184(rbx) = t184(rbx) ADD t183(rsi)
		t185(rsi) = mov t180(r12)
		t185(rsi) = t185(rsi) ADD Address (t184(rbx) + 0)
		cmp t185(rsi) s(rdi)
		set EQ t186(rsi)
		t76(rsi) = mov t186(rsi)
		jump search_32_logical_exit
	search_31_logical_false
		t76(rsi) = mov 0
		jump search_32_logical_exit
	search_32_logical_exit
		cmp t76(rsi) 1
		CJump EQ search_33_if_true
		jump search_42_if_false
	search_33_if_true
		t187(rsi) = mov 0
		t187(rsi) = t187(rsi) SHL 3
		t188(rdi) = mov Address (count(@count) + 0)
		t188(rdi) = t188(rdi) ADD t187(rsi)
		t189(rsi) = mov 0
		t189(rsi) = t189(rsi) SHL 3
		t190(rbx) = mov Address (count(@count) + 0)
		t190(rbx) = t190(rbx) ADD t189(rsi)
		t191(rsi) = mov Address (t190(rbx) + 0)
		t191(rsi) = t191(rsi) ADD 1
		Address (t188(rdi) + 0) = mov t191(rsi)
		i(r13) = mov 0
		jump search_34_loop_condition
	search_34_loop_condition
		cmp i(r13) 2
		set LEEQ t192(rsi)
		cmp t192(rsi) 1
		CJump EQ search_35_loop_body
		jump search_41_loop_exit
	search_35_loop_body
		j(r12) = mov 0
		jump search_36_loop_condition
	search_36_loop_condition
		cmp j(r12) 2
		set LEEQ t193(rsi)
		cmp t193(rsi) 1
		CJump EQ search_37_loop_body
		jump search_39_loop_exit
	search_37_loop_body
		t194(rbx) = mov i(r13)
		t194(rbx) = t194(rbx) SHL 3
		t195(rsi) = mov Address (make(@make) + 0)
		t195(rsi) = t195(rsi) ADD t194(rbx)
		t196(rbx) = mov j(r12)
		t196(rbx) = t196(rbx) SHL 3
		t197(rsi) = mov Address (t195(rsi) + 0)
		t197(rsi) = t197(rsi) ADD t196(rbx)
		t199(rdi) = mov Address (t197(rsi) + 0)
		call toString return value = t198(rax)
		t201(rdi) = mov t198(rax)
		call print return value = null
		t202(rdi) = mov __const_string_0
		call print return value = null
		jump search_38_loop_increment
	search_38_loop_increment
		t203(rsi) = mov j(r12)
		INC j(r12)
		jump search_36_loop_condition
	search_39_loop_exit
		t204(rdi) = mov __const_string_1
		call print return value = null
		jump search_40_loop_increment
	search_40_loop_increment
		t205(rsi) = mov i(r13)
		INC i(r13)
		jump search_34_loop_condition
	search_41_loop_exit
		t206(rdi) = mov __const_string_2
		call print return value = null
		jump search_43_if_exit
	search_42_if_false
		jump search_43_if_exit
	search_43_if_exit
		jump search_70_if_exit
	search_44_if_false
		cmp y(r9) 2
		set EQ t207(rsi)
		cmp t207(rsi) 1
		CJump EQ search_45_if_true
		jump search_58_if_false
	search_45_if_true
		t208(rbx) = mov x(r8)
		t208(rbx) = t208(rbx) SHL 3
		t209(rsi) = mov Address (make(@make) + 0)
		t209(rsi) = t209(rsi) ADD t208(rbx)
		t210(rbx) = mov y(r9)
		t210(rbx) = t210(rbx) SHL 3
		t211(r13) = mov Address (t209(rsi) + 0)
		t211(r13) = t211(r13) ADD t210(rbx)
		t212(rbx) = mov x(r8)
		t212(rbx) = t212(rbx) SHL 3
		t213(rsi) = mov Address (make(@make) + 0)
		t213(rsi) = t213(rsi) ADD t212(rbx)
		t214(rbx) = mov 0
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (t213(rsi) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		t216(rdi) = mov 15
		t216(rdi) = t216(rdi) SUB Address (t215(rsi) + 0)
		t217(rsi) = mov x(r8)
		t217(rsi) = t217(rsi) SHL 3
		t218(rbx) = mov Address (make(@make) + 0)
		t218(rbx) = t218(rbx) ADD t217(rsi)
		t219(rsi) = mov 1
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (t218(rbx) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		t221(rsi) = mov t216(rdi)
		t221(rsi) = t221(rsi) SUB Address (t220(rbx) + 0)
		Address (t211(r13) + 0) = mov t221(rsi)
		t224(rbx) = mov x(r8)
		t224(rbx) = t224(rbx) SHL 3
		t225(rsi) = mov Address (make(@make) + 0)
		t225(rsi) = t225(rsi) ADD t224(rbx)
		t226(rbx) = mov y(r9)
		t226(rbx) = t226(rbx) SHL 3
		t227(rsi) = mov Address (t225(rsi) + 0)
		t227(rsi) = t227(rsi) ADD t226(rbx)
		cmp Address (t227(rsi) + 0) 0
		set GR t228(rsi)
		cmp t228(rsi) 1
		CJump NEQ search_47_logical_false
		jump search_46_logical_true
	search_46_logical_true
		t229(rsi) = mov x(r8)
		t229(rsi) = t229(rsi) SHL 3
		t230(rbx) = mov Address (make(@make) + 0)
		t230(rbx) = t230(rbx) ADD t229(rsi)
		t231(rsi) = mov y(r9)
		t231(rsi) = t231(rsi) SHL 3
		t232(rbx) = mov Address (t230(rbx) + 0)
		t232(rbx) = t232(rbx) ADD t231(rsi)
		cmp Address (t232(rbx) + 0) 10
		set LE t233(rsi)
		t223(rsi) = mov t233(rsi)
		jump search_48_logical_exit
	search_47_logical_false
		t223(rsi) = mov 0
		jump search_48_logical_exit
	search_48_logical_exit
		cmp t223(rsi) 1
		CJump NEQ search_50_logical_false
		jump search_49_logical_true
	search_49_logical_true
		t234(rbx) = mov x(r8)
		t234(rbx) = t234(rbx) SHL 3
		t235(rsi) = mov Address (make(@make) + 0)
		t235(rsi) = t235(rsi) ADD t234(rbx)
		t236(rbx) = mov y(r9)
		t236(rbx) = t236(rbx) SHL 3
		t237(rsi) = mov Address (t235(rsi) + 0)
		t237(rsi) = t237(rsi) ADD t236(rbx)
		t238(rsi) = mov Address (t237(rsi) + 0)
		t238(rsi) = t238(rsi) SHL 3
		t239(rbx) = mov Address (color(@color) + 0)
		t239(rbx) = t239(rbx) ADD t238(rsi)
		cmp Address (t239(rbx) + 0) 0
		set EQ t240(rsi)
		t222(rsi) = mov t240(rsi)
		jump search_51_logical_exit
	search_50_logical_false
		t222(rsi) = mov 0
		jump search_51_logical_exit
	search_51_logical_exit
		cmp t222(rsi) 1
		CJump EQ search_52_if_true
		jump search_56_if_false
	search_52_if_true
		t241(rsi) = mov x(r8)
		t241(rsi) = t241(rsi) SHL 3
		t242(rbx) = mov Address (make(@make) + 0)
		t242(rbx) = t242(rbx) ADD t241(rsi)
		t243(rsi) = mov y(r9)
		t243(rsi) = t243(rsi) SHL 3
		t244(rbx) = mov Address (t242(rbx) + 0)
		t244(rbx) = t244(rbx) ADD t243(rsi)
		t245(rbx) = mov Address (t244(rbx) + 0)
		t245(rbx) = t245(rbx) SHL 3
		t246(rsi) = mov Address (color(@color) + 0)
		t246(rsi) = t246(rsi) ADD t245(rbx)
		Address (t246(rsi) + 0) = mov 1
		cmp y(r9) 2
		set EQ t247(rsi)
		cmp t247(rsi) 1
		CJump EQ search_53_if_true
		jump search_54_if_false
	search_53_if_true
		t248(rdi) = mov x(r8)
		t248(rdi) = t248(rdi) ADD 1
		t249(rsi) = mov x(r8)
		t249(rsi) = t249(rsi) SHL 3
		t250(rbx) = mov Address (make(@make) + 0)
		t250(rbx) = t250(rbx) ADD t249(rsi)
		t251(rsi) = mov y(r9)
		t251(rsi) = t251(rsi) SHL 3
		t252(rbx) = mov Address (t250(rbx) + 0)
		t252(rbx) = t252(rbx) ADD t251(rsi)
		t253(r12) = mov z(r12)
		t253(r12) = t253(r12) ADD Address (t252(rbx) + 0)
		t255(rdi) = mov t248(rdi)
		t256(rsi) = mov 0
		t257(rdx) = mov t253(r12)
		call search return value = t254(rax)
		t258(rsi) = mov t254(rax)
		jump search_55_if_exit
	search_54_if_false
		t259(r13) = mov y(r9)
		t259(r13) = t259(r13) ADD 1
		t260(rsi) = mov x(r8)
		t260(rsi) = t260(rsi) SHL 3
		t261(rbx) = mov Address (make(@make) + 0)
		t261(rbx) = t261(rbx) ADD t260(rsi)
		t262(rsi) = mov y(r9)
		t262(rsi) = t262(rsi) SHL 3
		t263(rdi) = mov Address (t261(rbx) + 0)
		t263(rdi) = t263(rdi) ADD t262(rsi)
		t264(rbx) = mov z(r12)
		t264(rbx) = t264(rbx) ADD Address (t263(rdi) + 0)
		t266(rdi) = mov x(r8)
		t267(rsi) = mov t259(r13)
		t268(rdx) = mov t264(rbx)
		call search return value = t265(rax)
		t269(rsi) = mov t265(rax)
		jump search_55_if_exit
	search_55_if_exit
		t270(rsi) = mov x(r8)
		t270(rsi) = t270(rsi) SHL 3
		t271(rbx) = mov Address (make(@make) + 0)
		t271(rbx) = t271(rbx) ADD t270(rsi)
		t272(rsi) = mov y(r9)
		t272(rsi) = t272(rsi) SHL 3
		t273(rbx) = mov Address (t271(rbx) + 0)
		t273(rbx) = t273(rbx) ADD t272(rsi)
		t274(rsi) = mov Address (t273(rbx) + 0)
		t274(rsi) = t274(rsi) SHL 3
		t275(rbx) = mov Address (color(@color) + 0)
		t275(rbx) = t275(rbx) ADD t274(rsi)
		Address (t275(rbx) + 0) = mov 0
		jump search_57_if_exit
	search_56_if_false
		jump search_57_if_exit
	search_57_if_exit
		jump search_69_if_exit
	search_58_if_false
		i(r13) = mov 1
		jump search_59_loop_condition
	search_59_loop_condition
		cmp i(r13) 9
		set LEEQ t276(rsi)
		cmp t276(rsi) 1
		CJump EQ search_60_loop_body
		jump search_68_loop_exit
	search_60_loop_body
		t277(rsi) = mov i(r13)
		t277(rsi) = t277(rsi) SHL 3
		t278(rbx) = mov Address (color(@color) + 0)
		t278(rbx) = t278(rbx) ADD t277(rsi)
		cmp Address (t278(rbx) + 0) 0
		set EQ t279(rsi)
		cmp t279(rsi) 1
		CJump EQ search_61_if_true
		jump search_65_if_false
	search_61_if_true
		t280(rsi) = mov i(r13)
		t280(rsi) = t280(rsi) SHL 3
		t281(rbx) = mov Address (color(@color) + 0)
		t281(rbx) = t281(rbx) ADD t280(rsi)
		Address (t281(rbx) + 0) = mov 1
		t282(rsi) = mov x(r8)
		t282(rsi) = t282(rsi) SHL 3
		t283(rbx) = mov Address (make(@make) + 0)
		t283(rbx) = t283(rbx) ADD t282(rsi)
		t284(rsi) = mov y(r9)
		t284(rsi) = t284(rsi) SHL 3
		t285(rbx) = mov Address (t283(rbx) + 0)
		t285(rbx) = t285(rbx) ADD t284(rsi)
		Address (t285(rbx) + 0) = mov i(r13)
		cmp y(r9) 2
		set EQ t286(rsi)
		cmp t286(rsi) 1
		CJump EQ search_62_if_true
		jump search_63_if_false
	search_62_if_true
		t287(rsi) = mov x(r8)
		t287(rsi) = t287(rsi) ADD 1
		t288(rbx) = mov z(r12)
		t288(rbx) = t288(rbx) ADD i(r13)
		t290(rdi) = mov t287(rsi)
		t291(rsi) = mov 0
		t292(rdx) = mov t288(rbx)
		call search return value = t289(rax)
		t293(rsi) = mov t289(rax)
		jump search_64_if_exit
	search_63_if_false
		t294(rsi) = mov y(r9)
		t294(rsi) = t294(rsi) ADD 1
		t295(rbx) = mov z(r12)
		t295(rbx) = t295(rbx) ADD i(r13)
		t297(rdi) = mov x(r8)
		t298(rsi) = mov t294(rsi)
		t299(rdx) = mov t295(rbx)
		call search return value = t296(rax)
		t300(rsi) = mov t296(rax)
		jump search_64_if_exit
	search_64_if_exit
		t301(rsi) = mov x(r8)
		t301(rsi) = t301(rsi) SHL 3
		t302(rbx) = mov Address (make(@make) + 0)
		t302(rbx) = t302(rbx) ADD t301(rsi)
		t303(rsi) = mov y(r9)
		t303(rsi) = t303(rsi) SHL 3
		t304(rbx) = mov Address (t302(rbx) + 0)
		t304(rbx) = t304(rbx) ADD t303(rsi)
		Address (t304(rbx) + 0) = mov 0
		t305(rsi) = mov i(r13)
		t305(rsi) = t305(rsi) SHL 3
		t306(rbx) = mov Address (color(@color) + 0)
		t306(rbx) = t306(rbx) ADD t305(rsi)
		Address (t306(rbx) + 0) = mov 0
		jump search_66_if_exit
	search_65_if_false
		jump search_66_if_exit
	search_66_if_exit
		jump search_67_loop_increment
	search_67_loop_increment
		t307(rsi) = mov i(r13)
		INC i(r13)
		jump search_59_loop_condition
	search_68_loop_exit
		jump search_69_if_exit
	search_69_if_exit
		jump search_70_if_exit
	search_70_if_exit
		jump search_72_if_exit
	search_71_if_false
		jump search_72_if_exit
	search_72_if_exit
		jump search_73_block_exit
	search_73_block_exit
}
__global_init {
	__global_init_0_block_enter
		t309(rsi) = mov 10
		INC t309(rsi)
		t309(rsi) = t309(rsi) SHL 3
		malloc t308(rsi) t309(rsi)
		Address (t308(rsi) + 0) = mov 10
		t308(rsi) = t308(rsi) ADD 8
		Address (color(@color) + 0) = mov t308(rsi)
		t311(rsi) = mov 1
		INC t311(rsi)
		t311(rsi) = t311(rsi) SHL 3
		malloc t310(rsi) t311(rsi)
		Address (t310(rsi) + 0) = mov 1
		t310(rsi) = t310(rsi) ADD 8
		Address (count(@count) + 0) = mov t310(rsi)
		jump __global_init_1_block_exit
	__global_init_1_block_exit
}
origin N(rsi) {
	origin_0_block_enter
		N(rsi) = mov t0(rdi)
		t2(rdi) = mov N(rsi)
		INC t2(rdi)
		t2(rdi) = t2(rdi) SHL 3
		malloc t1(rdi) t2(rdi)
		Address (t1(rdi) + 0) = mov N(rsi)
		t1(rdi) = t1(rdi) ADD 8
		Address (make(@make) + 0) = mov t1(rdi)
		Address (i(@i) + 0) = mov 0
		jump origin_1_loop_condition
	origin_1_loop_condition
		cmp Address (i(@i) + 0) N(rsi)
		set LE t3(rdi)
		cmp t3(rdi) 1
		CJump EQ origin_2_loop_body
		jump origin_8_loop_exit
	origin_2_loop_body
		t4(rdi) = mov Address (i(@i) + 0)
		t4(rdi) = t4(rdi) SHL 3
		t5(r8) = mov Address (make(@make) + 0)
		t5(r8) = t5(r8) ADD t4(rdi)
		t7(rdi) = mov N(rsi)
		INC t7(rdi)
		t7(rdi) = t7(rdi) SHL 3
		malloc t6(rdi) t7(rdi)
		Address (t6(rdi) + 0) = mov N(rsi)
		t6(rdi) = t6(rdi) ADD 8
		Address (t5(r8) + 0) = mov t6(rdi)
		Address (j(@j) + 0) = mov 0
		jump origin_3_loop_condition
	origin_3_loop_condition
		cmp Address (j(@j) + 0) N(rsi)
		set LE t8(rdi)
		cmp t8(rdi) 1
		CJump EQ origin_4_loop_body
		jump origin_6_loop_exit
	origin_4_loop_body
		t9(rdi) = mov Address (i(@i) + 0)
		t9(rdi) = t9(rdi) SHL 3
		t10(r8) = mov Address (make(@make) + 0)
		t10(r8) = t10(r8) ADD t9(rdi)
		t11(rdi) = mov Address (j(@j) + 0)
		t11(rdi) = t11(rdi) SHL 3
		t12(r8) = mov Address (t10(r8) + 0)
		t12(r8) = t12(r8) ADD t11(rdi)
		Address (t12(r8) + 0) = mov 0
		jump origin_5_loop_increment
	origin_5_loop_increment
		t13(rdi) = mov Address (j(@j) + 0)
		INC Address (j(@j) + 0)
		jump origin_3_loop_condition
	origin_6_loop_exit
		jump origin_7_loop_increment
	origin_7_loop_increment
		t14(rdi) = mov Address (i(@i) + 0)
		INC Address (i(@i) + 0)
		jump origin_1_loop_condition
	origin_8_loop_exit
		jump origin_9_block_exit
	origin_9_block_exit
}
main {
	main_0_block_enter
		t15(rdi) = mov 3
		call origin return value = null
		t17(rdi) = mov 0
		t18(rsi) = mov 0
		t19(rdx) = mov 0
		call search return value = t16(rax)
		t20(rsi) = mov t16(rax)
		t21(rbx) = mov 0
		t21(rbx) = t21(rbx) SHL 3
		t22(rsi) = mov Address (count(@count) + 0)
		t22(rsi) = t22(rsi) ADD t21(rbx)
		t24(rdi) = mov Address (t22(rsi) + 0)
		call toString return value = t23(rax)
		t26(rdi) = mov t23(rax)
		call println return value = null
		ret 0
		jump main_1_block_exit
	main_1_block_exit
}
