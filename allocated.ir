myprint x(rdi) {
	myprint_0_block_enter
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t74(rax)
		t76(rsi) = mov t74(rax)
		cmp i(r12) t76(rsi)
		CJump LE myprint_2_loop_body
		jump myprint_5_block_exit
	myprint_1_loop_condition
		call __string_length return value = t74(rax)
		t76(rsi) = mov t74(rax)
		cmp i(r12) t76(rsi)
		CJump LE myprint_2_loop_body
		jump myprint_5_block_exit
	myprint_2_loop_body
		t80(rsi) = mov i(r12)
		call __string_ord return value = t78(rax)
		t81(rsi) = mov t78(rax)
		t82(rbx) = mov Address (myHash(@myHash) + 0)
		t82(rbx) = t82(rbx) ADD t81(rsi)
		Address (myHash(@myHash) + 0) = mov t82(rbx)
		INC i(r12)
		call __string_length return value = t74(rax)
		t76(rsi) = mov t74(rax)
		cmp i(r12) t76(rsi)
		CJump LE myprint_2_loop_body
		jump myprint_5_block_exit
	myprint_3_loop_increment
		INC i(r12)
		call __string_length return value = t74(rax)
		t76(rsi) = mov t74(rax)
		cmp i(r12) t76(rsi)
		CJump LE myprint_2_loop_body
	myprint_5_block_exit
}
dfs dep(rbx) {
	dfs_0_block_enter
		dep(rbx) = mov t111(rdi)
		cmp dep(rbx) Address (n(@n) + 0)
		CJump EQ dfs_8_inline_enter
		t119(rsi) = mov dep(rbx)
		INC t119(rsi)
		t120(rdi) = mov t119(rsi)
		t120(rdi) = t120(rdi) SHL 3
		t121(rsi) = mov Address (assignment(@assignment) + 0)
		t121(rsi) = t121(rsi) ADD t120(rdi)
		Address (t121(rsi) + 0) = mov 1
		t122(rsi) = mov dep(rbx)
		INC t122(rsi)
		t123(rdi) = mov t122(rsi)
		call dfs return value = null
		t124(rsi) = mov dep(rbx)
		INC t124(rsi)
		t125(rsi) = t125(rsi) SHL 3
		t126(rdi) = mov Address (assignment(@assignment) + 0)
		t126(rdi) = t126(rdi) ADD t125(rsi)
		Address (t126(rdi) + 0) = mov 0
		t127(rsi) = mov dep(rbx)
		INC t127(rsi)
		t128(rdi) = mov t127(rsi)
		call dfs return value = null
		jump dfs_7_block_exit
	dfs_8_inline_enter
		i(r13) = i(r13) XOR i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_9_loop_condition
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_10_loop_body
		succ(rbx) = succ(rbx) XOR succ(rbx)
		j(r12) = j(r12) XOR j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_11_loop_condition
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_12_loop_body
		t161(rsi) = mov i(r13)
		t161(rsi) = t161(rsi) SHL 3
		t162(r8) = mov Address (sat(@sat) + 0)
		t162(r8) = t162(r8) ADD t161(rsi)
		t163(rdi) = mov j(r12)
		t163(rdi) = t163(rdi) SHL 3
		t164(rsi) = mov Address (t162(r8) + 0)
		t164(rsi) = t164(rsi) ADD t163(rdi)
		var(r8) = mov Address (t164(rsi) + 0)
		cmp var(r8) 0
		set GR t166(rsi)
		cmp t166(rsi) 1
		CJump NEQ dfs_14_logical_false
		t167(rsi) = mov var(r8)
		t167(rsi) = t167(rsi) SHL 3
		t168(rdi) = mov Address (assignment(@assignment) + 0)
		t168(rdi) = t168(rdi) ADD t167(rsi)
		cmp Address (t168(rdi) + 0) 1
		set EQ t169(rsi)
		cmp t165(rsi) 1
		CJump EQ dfs_16_if_true
		cmp var(r8) 0
		set LE t171(rsi)
		cmp t171(rsi) 1
		CJump NEQ dfs_20_logical_false
		t172(rsi) = mov var(r8)
		NEG t172(rsi)
		t173(rdi) = mov t172(rsi)
		t173(rdi) = t173(rdi) SHL 3
		t174(rsi) = mov Address (assignment(@assignment) + 0)
		t174(rsi) = t174(rsi) ADD t173(rdi)
		cmp Address (t174(rsi) + 0) 0
		set EQ t175(rsi)
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_13_logical_true
		t167(rsi) = mov var(r8)
		t167(rsi) = t167(rsi) SHL 3
		t168(rdi) = mov Address (assignment(@assignment) + 0)
		t168(rdi) = t168(rdi) ADD t167(rsi)
		cmp Address (t168(rdi) + 0) 1
		set EQ t169(rsi)
		cmp t165(rsi) 1
		CJump EQ dfs_16_if_true
		cmp var(r8) 0
		set LE t171(rsi)
		cmp t171(rsi) 1
		CJump NEQ dfs_20_logical_false
		t172(rsi) = mov var(r8)
		NEG t172(rsi)
		t173(rdi) = mov t172(rsi)
		t173(rdi) = t173(rdi) SHL 3
		t174(rsi) = mov Address (assignment(@assignment) + 0)
		t174(rsi) = t174(rsi) ADD t173(rdi)
		cmp Address (t174(rsi) + 0) 0
		set EQ t175(rsi)
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_14_logical_false
		t165(rsi) = t165(rsi) XOR t165(rsi)
		cmp t165(rsi) 1
		CJump EQ dfs_16_if_true
		cmp var(r8) 0
		set LE t171(rsi)
		cmp t171(rsi) 1
		CJump NEQ dfs_20_logical_false
		t172(rsi) = mov var(r8)
		NEG t172(rsi)
		t173(rdi) = mov t172(rsi)
		t173(rdi) = t173(rdi) SHL 3
		t174(rsi) = mov Address (assignment(@assignment) + 0)
		t174(rsi) = t174(rsi) ADD t173(rdi)
		cmp Address (t174(rsi) + 0) 0
		set EQ t175(rsi)
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_15_logical_exit
		cmp t165(rsi) 1
		CJump EQ dfs_16_if_true
		cmp var(r8) 0
		set LE t171(rsi)
		cmp t171(rsi) 1
		CJump NEQ dfs_20_logical_false
		t172(rsi) = mov var(r8)
		NEG t172(rsi)
		t173(rdi) = mov t172(rsi)
		t173(rdi) = t173(rdi) SHL 3
		t174(rsi) = mov Address (assignment(@assignment) + 0)
		t174(rsi) = t174(rsi) ADD t173(rdi)
		cmp Address (t174(rsi) + 0) 0
		set EQ t175(rsi)
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_16_if_true
		succ(rbx) = mov 1
		cmp var(r8) 0
		set LE t171(rsi)
		cmp t171(rsi) 1
		CJump NEQ dfs_20_logical_false
		t172(rsi) = mov var(r8)
		NEG t172(rsi)
		t173(rdi) = mov t172(rsi)
		t173(rdi) = t173(rdi) SHL 3
		t174(rsi) = mov Address (assignment(@assignment) + 0)
		t174(rsi) = t174(rsi) ADD t173(rdi)
		cmp Address (t174(rsi) + 0) 0
		set EQ t175(rsi)
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_18_if_exit
		cmp var(r8) 0
		set LE t171(rsi)
		cmp t171(rsi) 1
		CJump NEQ dfs_20_logical_false
		t172(rsi) = mov var(r8)
		NEG t172(rsi)
		t173(rdi) = mov t172(rsi)
		t173(rdi) = t173(rdi) SHL 3
		t174(rsi) = mov Address (assignment(@assignment) + 0)
		t174(rsi) = t174(rsi) ADD t173(rdi)
		cmp Address (t174(rsi) + 0) 0
		set EQ t175(rsi)
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_19_logical_true
		t172(rsi) = mov var(r8)
		NEG t172(rsi)
		t173(rdi) = mov t172(rsi)
		t173(rdi) = t173(rdi) SHL 3
		t174(rsi) = mov Address (assignment(@assignment) + 0)
		t174(rsi) = t174(rsi) ADD t173(rdi)
		cmp Address (t174(rsi) + 0) 0
		set EQ t175(rsi)
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_20_logical_false
		t170(rsi) = t170(rsi) XOR t170(rsi)
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_21_logical_exit
		cmp t170(rsi) 1
		CJump EQ dfs_22_if_true
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_22_if_true
		succ(rbx) = mov 1
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_25_loop_increment
		INC j(r12)
		cmp j(r12) 3
		set LE t160(rsi)
		cmp t160(rsi) 1
		CJump EQ dfs_12_loop_body
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_26_loop_exit
		cmp succ(rbx) 0
		set EQ t176(rsi)
		cmp t176(rsi) 1
		CJump EQ dfs_27_if_true
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_27_if_true
		t114(rsi) = t114(rsi) XOR t114(rsi)
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_30_loop_increment
		INC i(r13)
		cmp i(r13) Address (m(@m) + 0)
		set LE t159(rsi)
		cmp t159(rsi) 1
		CJump EQ dfs_10_loop_body
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_31_loop_exit
		t114(rsi) = mov 1
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_32_inline_exit
		cmp t114(rsi) 1
		CJump EQ dfs_2_if_true
		jump dfs_7_block_exit
	dfs_2_if_true
		x(r12) = mov __const_string_3
		i(rsi) = i(rsi) XOR i(rsi)
		t178(rdi) = mov x(r12)
		call __string_length return value = t177(rax)
		t179(rbx) = mov t177(rax)
		cmp i(rsi) t179(rbx)
		set LE t180(rbx)
		cmp t180(rbx) 1
		CJump EQ dfs_35_loop_body
		dep(r12) = dep(r12) XOR dep(r12)
		cmp dep(r12) Address (n(@n) + 0)
		set EQ t186(rsi)
		cmp t186(rsi) 1
		CJump EQ dfs_40_if_true
		t213(rsi) = mov dep(r12)
		INC t213(rsi)
		t214(rbx) = mov t213(rsi)
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		Address (t215(rsi) + 0) = mov 1
		t216(rsi) = mov dep(r12)
		INC t216(rsi)
		t217(rdi) = mov t216(rsi)
		call print_cond return value = null
		t218(rsi) = mov dep(r12)
		INC t218(rsi)
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (cond_ass(@cond_ass) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		Address (t220(rbx) + 0) = mov 0
		t221(rsi) = mov dep(r12)
		INC t221(rsi)
		t222(rdi) = mov t221(rsi)
		call print_cond return value = null
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_33_inline_enter
		i(rsi) = i(rsi) XOR i(rsi)
		t178(rdi) = mov x(r12)
		call __string_length return value = t177(rax)
		t179(rbx) = mov t177(rax)
		cmp i(rsi) t179(rbx)
		set LE t180(rbx)
		cmp t180(rbx) 1
		CJump EQ dfs_35_loop_body
		dep(r12) = dep(r12) XOR dep(r12)
		cmp dep(r12) Address (n(@n) + 0)
		set EQ t186(rsi)
		cmp t186(rsi) 1
		CJump EQ dfs_40_if_true
		t213(rsi) = mov dep(r12)
		INC t213(rsi)
		t214(rbx) = mov t213(rsi)
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		Address (t215(rsi) + 0) = mov 1
		t216(rsi) = mov dep(r12)
		INC t216(rsi)
		t217(rdi) = mov t216(rsi)
		call print_cond return value = null
		t218(rsi) = mov dep(r12)
		INC t218(rsi)
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (cond_ass(@cond_ass) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		Address (t220(rbx) + 0) = mov 0
		t221(rsi) = mov dep(r12)
		INC t221(rsi)
		t222(rdi) = mov t221(rsi)
		call print_cond return value = null
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_34_loop_condition
		t178(rdi) = mov x(r12)
		call __string_length return value = t177(rax)
		t179(rbx) = mov t177(rax)
		cmp i(rsi) t179(rbx)
		set LE t180(rbx)
		cmp t180(rbx) 1
		CJump EQ dfs_35_loop_body
		dep(r12) = dep(r12) XOR dep(r12)
		cmp dep(r12) Address (n(@n) + 0)
		set EQ t186(rsi)
		cmp t186(rsi) 1
		CJump EQ dfs_40_if_true
		t213(rsi) = mov dep(r12)
		INC t213(rsi)
		t214(rbx) = mov t213(rsi)
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		Address (t215(rsi) + 0) = mov 1
		t216(rsi) = mov dep(r12)
		INC t216(rsi)
		t217(rdi) = mov t216(rsi)
		call print_cond return value = null
		t218(rsi) = mov dep(r12)
		INC t218(rsi)
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (cond_ass(@cond_ass) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		Address (t220(rbx) + 0) = mov 0
		t221(rsi) = mov dep(r12)
		INC t221(rsi)
		t222(rdi) = mov t221(rsi)
		call print_cond return value = null
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_35_loop_body
		t182(rdi) = mov x(r12)
		call __string_ord return value = t181(rax)
		t184(rbx) = mov t181(rax)
		t185(rdi) = mov Address (myHash(@myHash) + 0)
		t185(rdi) = t185(rdi) ADD t184(rbx)
		Address (myHash(@myHash) + 0) = mov t185(rdi)
		INC i(rsi)
		t178(rdi) = mov x(r12)
		call __string_length return value = t177(rax)
		t179(rbx) = mov t177(rax)
		cmp i(rsi) t179(rbx)
		set LE t180(rbx)
		cmp t180(rbx) 1
		CJump EQ dfs_35_loop_body
		dep(r12) = dep(r12) XOR dep(r12)
		cmp dep(r12) Address (n(@n) + 0)
		set EQ t186(rsi)
		cmp t186(rsi) 1
		CJump EQ dfs_40_if_true
		t213(rsi) = mov dep(r12)
		INC t213(rsi)
		t214(rbx) = mov t213(rsi)
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		Address (t215(rsi) + 0) = mov 1
		t216(rsi) = mov dep(r12)
		INC t216(rsi)
		t217(rdi) = mov t216(rsi)
		call print_cond return value = null
		t218(rsi) = mov dep(r12)
		INC t218(rsi)
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (cond_ass(@cond_ass) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		Address (t220(rbx) + 0) = mov 0
		t221(rsi) = mov dep(r12)
		INC t221(rsi)
		t222(rdi) = mov t221(rsi)
		call print_cond return value = null
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_36_loop_increment
		INC i(rsi)
		t178(rdi) = mov x(r12)
		call __string_length return value = t177(rax)
		t179(rbx) = mov t177(rax)
		cmp i(rsi) t179(rbx)
		set LE t180(rbx)
		cmp t180(rbx) 1
		CJump EQ dfs_35_loop_body
		dep(r12) = dep(r12) XOR dep(r12)
		cmp dep(r12) Address (n(@n) + 0)
		set EQ t186(rsi)
		cmp t186(rsi) 1
		CJump EQ dfs_40_if_true
		t213(rsi) = mov dep(r12)
		INC t213(rsi)
		t214(rbx) = mov t213(rsi)
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		Address (t215(rsi) + 0) = mov 1
		t216(rsi) = mov dep(r12)
		INC t216(rsi)
		t217(rdi) = mov t216(rsi)
		call print_cond return value = null
		t218(rsi) = mov dep(r12)
		INC t218(rsi)
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (cond_ass(@cond_ass) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		Address (t220(rbx) + 0) = mov 0
		t221(rsi) = mov dep(r12)
		INC t221(rsi)
		t222(rdi) = mov t221(rsi)
		call print_cond return value = null
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_38_inline_exit
		dep(r12) = dep(r12) XOR dep(r12)
		cmp dep(r12) Address (n(@n) + 0)
		set EQ t186(rsi)
		cmp t186(rsi) 1
		CJump EQ dfs_40_if_true
		t213(rsi) = mov dep(r12)
		INC t213(rsi)
		t214(rbx) = mov t213(rsi)
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		Address (t215(rsi) + 0) = mov 1
		t216(rsi) = mov dep(r12)
		INC t216(rsi)
		t217(rdi) = mov t216(rsi)
		call print_cond return value = null
		t218(rsi) = mov dep(r12)
		INC t218(rsi)
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (cond_ass(@cond_ass) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		Address (t220(rbx) + 0) = mov 0
		t221(rsi) = mov dep(r12)
		INC t221(rsi)
		t222(rdi) = mov t221(rsi)
		call print_cond return value = null
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_39_inline_enter
		cmp dep(r12) Address (n(@n) + 0)
		set EQ t186(rsi)
		cmp t186(rsi) 1
		CJump EQ dfs_40_if_true
		t213(rsi) = mov dep(r12)
		INC t213(rsi)
		t214(rbx) = mov t213(rsi)
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		Address (t215(rsi) + 0) = mov 1
		t216(rsi) = mov dep(r12)
		INC t216(rsi)
		t217(rdi) = mov t216(rsi)
		call print_cond return value = null
		t218(rsi) = mov dep(r12)
		INC t218(rsi)
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (cond_ass(@cond_ass) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		Address (t220(rbx) + 0) = mov 0
		t221(rsi) = mov dep(r12)
		INC t221(rsi)
		t222(rdi) = mov t221(rsi)
		call print_cond return value = null
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_40_if_true
		t188(rdi) = mov Address (cond_ass(@cond_ass) + 0)
		t189(rsi) = mov Address (assignment(@assignment) + 0)
		call payoff return value = t187(rax)
		t192(rdi) = mov t187(rax)
		call toString return value = t191(rax)
		t193(rsi) = mov t191(rax)
		t195(rdi) = mov __const_string_8
		call __string_connection return value = t194(rax)
		t199(rdi) = mov t194(rax)
		t200(rsi) = mov __const_string_9
		call __string_connection return value = t198(rax)
		t202(rdi) = mov t198(rax)
		call myprint return value = null
		i(rsi) = i(rsi) XOR i(rsi)
		cmp i(rsi) Address (n(@n) + 0)
		set LE t203(rbx)
		cmp t203(rbx) 1
		CJump EQ dfs_42_loop_body
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_41_loop_condition
		cmp i(rsi) Address (n(@n) + 0)
		set LE t203(rbx)
		cmp t203(rbx) 1
		CJump EQ dfs_42_loop_body
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_42_loop_body
		t204(rbx) = mov i(rsi)
		t204(rbx) = t204(rbx) MOD 10
		cmp t204(rbx) 0
		set EQ t205(rbx)
		cmp t205(rbx) 1
		CJump EQ dfs_43_if_true
		INC i(rsi)
		cmp i(rsi) Address (n(@n) + 0)
		set LE t203(rbx)
		cmp t203(rbx) 1
		CJump EQ dfs_42_loop_body
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_43_if_true
		t206(rbx) = mov i(rsi)
		INC t206(rbx)
		t207(rbx) = t207(rbx) SHL 3
		t208(rdi) = mov Address (cond_ass(@cond_ass) + 0)
		t208(rdi) = t208(rdi) ADD t207(rbx)
		t210(rdi) = mov Address (t208(rdi) + 0)
		call toString return value = t209(rax)
		t212(rdi) = mov t209(rax)
		call myprint return value = null
		INC i(rsi)
		cmp i(rsi) Address (n(@n) + 0)
		set LE t203(rbx)
		cmp t203(rbx) 1
		CJump EQ dfs_42_loop_body
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_46_loop_increment
		INC i(rsi)
		cmp i(rsi) Address (n(@n) + 0)
		set LE t203(rbx)
		cmp t203(rbx) 1
		CJump EQ dfs_42_loop_body
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_49_if_exit
		t213(rsi) = mov dep(r12)
		INC t213(rsi)
		t214(rbx) = mov t213(rsi)
		t214(rbx) = t214(rbx) SHL 3
		t215(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t215(rsi) = t215(rsi) ADD t214(rbx)
		Address (t215(rsi) + 0) = mov 1
		t216(rsi) = mov dep(r12)
		INC t216(rsi)
		t217(rdi) = mov t216(rsi)
		call print_cond return value = null
		t218(rsi) = mov dep(r12)
		INC t218(rsi)
		t219(rsi) = t219(rsi) SHL 3
		t220(rbx) = mov Address (cond_ass(@cond_ass) + 0)
		t220(rbx) = t220(rbx) ADD t219(rsi)
		Address (t220(rbx) + 0) = mov 0
		t221(rsi) = mov dep(r12)
		INC t221(rsi)
		t222(rdi) = mov t221(rsi)
		call print_cond return value = null
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_50_inline_exit
		x(r12) = mov __const_string_4
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_51_inline_enter
		i(rsi) = i(rsi) XOR i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_52_loop_condition
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_53_loop_body
		t228(rdi) = mov x(r12)
		call __string_ord return value = t227(rax)
		t230(rbx) = mov t227(rax)
		t231(rdi) = mov Address (myHash(@myHash) + 0)
		t231(rdi) = t231(rdi) ADD t230(rbx)
		Address (myHash(@myHash) + 0) = mov t231(rdi)
		INC i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_54_loop_increment
		INC i(rsi)
		t224(rdi) = mov x(r12)
		call __string_length return value = t223(rax)
		t225(rbx) = mov t223(rax)
		cmp i(rsi) t225(rbx)
		set LE t226(rbx)
		cmp t226(rbx) 1
		CJump EQ dfs_53_loop_body
		jump dfs_7_block_exit
	dfs_6_if_exit
		t119(rsi) = mov dep(rbx)
		INC t119(rsi)
		t120(rdi) = mov t119(rsi)
		t120(rdi) = t120(rdi) SHL 3
		t121(rsi) = mov Address (assignment(@assignment) + 0)
		t121(rsi) = t121(rsi) ADD t120(rdi)
		Address (t121(rsi) + 0) = mov 1
		t122(rsi) = mov dep(rbx)
		INC t122(rsi)
		t123(rdi) = mov t122(rsi)
		call dfs return value = null
		t124(rsi) = mov dep(rbx)
		INC t124(rsi)
		t125(rsi) = t125(rsi) SHL 3
		t126(rdi) = mov Address (assignment(@assignment) + 0)
		t126(rdi) = t126(rdi) ADD t125(rsi)
		Address (t126(rdi) + 0) = mov 0
		t127(rsi) = mov dep(rbx)
		INC t127(rsi)
		t128(rdi) = mov t127(rsi)
		call dfs return value = null
	dfs_7_block_exit
}
__global_init {
	__global_init_0_block_enter
		t158(rsi) = mov 10
		INC t158(rsi)
		t158(rsi) = t158(rsi) SHL 3
		malloc t157(rsi) t158(rsi)
		Address (t157(rsi) + 0) = mov 10
		t157(rsi) = t157(rsi) ADD 8
		Address (my(@my) + 0) = mov t157(rsi)
		Address (myHash(@myHash) + 0) = mov 0
	__global_init_1_block_exit
}
print_last_cond dep(rsi) {
	print_last_cond_0_block_enter
		dep(rsi) = mov t129(rdi)
		cmp dep(rsi) Address (n(@n) + 0)
		CJump EQ print_last_cond_1_if_true
		t147(rbx) = mov dep(rsi)
		INC t147(rbx)
		t148(rdi) = mov t147(rbx)
		t148(rdi) = t148(rdi) SHL 3
		t149(rbx) = mov Address (assignment(@assignment) + 0)
		t149(rbx) = t149(rbx) ADD t148(rdi)
		Address (t149(rbx) + 0) = mov 1
		t150(rbx) = mov dep(rsi)
		INC t150(rbx)
		t151(rdi) = mov t150(rbx)
		call print_last_cond return value = null
		t152(rbx) = mov dep(rsi)
		INC t152(rbx)
		t153(rbx) = t153(rbx) SHL 3
		t154(rdi) = mov Address (assignment(@assignment) + 0)
		t154(rdi) = t154(rdi) ADD t153(rbx)
		Address (t154(rdi) + 0) = mov 0
		INC t155(rsi)
		t156(rdi) = mov t155(rsi)
		call print_last_cond return value = null
		jump print_last_cond_14_block_exit
	print_last_cond_1_if_true
		x(r13) = mov __const_string_5
		i(rbx) = i(rbx) XOR i(rbx)
		t233(rdi) = mov x(r13)
		call __string_length return value = t232(rax)
		t234(rsi) = mov t232(rax)
		cmp i(rbx) t234(rsi)
		set LE t235(rsi)
		cmp t235(rsi) 1
		CJump EQ print_last_cond_17_loop_body
		islast(r12) = mov 1
		i(r8) = i(r8) XOR i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_15_inline_enter
		i(rbx) = i(rbx) XOR i(rbx)
		t233(rdi) = mov x(r13)
		call __string_length return value = t232(rax)
		t234(rsi) = mov t232(rax)
		cmp i(rbx) t234(rsi)
		set LE t235(rsi)
		cmp t235(rsi) 1
		CJump EQ print_last_cond_17_loop_body
		islast(r12) = mov 1
		i(r8) = i(r8) XOR i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_16_loop_condition
		t233(rdi) = mov x(r13)
		call __string_length return value = t232(rax)
		t234(rsi) = mov t232(rax)
		cmp i(rbx) t234(rsi)
		set LE t235(rsi)
		cmp t235(rsi) 1
		CJump EQ print_last_cond_17_loop_body
		islast(r12) = mov 1
		i(r8) = i(r8) XOR i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_17_loop_body
		t237(rdi) = mov x(r13)
		t238(rsi) = mov i(rbx)
		call __string_ord return value = t236(rax)
		t239(rsi) = mov t236(rax)
		t240(rdi) = mov Address (myHash(@myHash) + 0)
		t240(rdi) = t240(rdi) ADD t239(rsi)
		Address (myHash(@myHash) + 0) = mov t240(rdi)
		INC i(rbx)
		t233(rdi) = mov x(r13)
		call __string_length return value = t232(rax)
		t234(rsi) = mov t232(rax)
		cmp i(rbx) t234(rsi)
		set LE t235(rsi)
		cmp t235(rsi) 1
		CJump EQ print_last_cond_17_loop_body
		islast(r12) = mov 1
		i(r8) = i(r8) XOR i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_18_loop_increment
		INC i(rbx)
		t233(rdi) = mov x(r13)
		call __string_length return value = t232(rax)
		t234(rsi) = mov t232(rax)
		cmp i(rbx) t234(rsi)
		set LE t235(rsi)
		cmp t235(rsi) 1
		CJump EQ print_last_cond_17_loop_body
		islast(r12) = mov 1
		i(r8) = i(r8) XOR i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_20_inline_exit
		islast(r12) = mov 1
		i(r8) = i(r8) XOR i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_2_loop_condition
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_3_loop_body
		t133(rsi) = mov i(r8)
		INC t133(rsi)
		t134(rsi) = t134(rsi) SHL 3
		t135(rbx) = mov Address (assignment(@assignment) + 0)
		t135(rbx) = t135(rbx) ADD t134(rsi)
		cmp Address (t135(rbx) + 0) 1
		CJump EQ print_last_cond_4_if_true
		t137(rsi) = mov i(r8)
		INC t137(rsi)
		t138(rbx) = mov t137(rsi)
		t138(rbx) = t138(rbx) SHL 3
		t139(rsi) = mov Address (assignment(@assignment) + 0)
		t139(rsi) = t139(rsi) ADD t138(rbx)
		t141(rdi) = mov Address (t139(rsi) + 0)
		call toString return value = t140(rax)
		x(r13) = mov t140(rax)
		i(rbx) = i(rbx) XOR i(rbx)
		t242(rdi) = mov x(r13)
		call __string_length return value = t241(rax)
		t243(rsi) = mov t241(rax)
		cmp i(rbx) t243(rsi)
		set LE t244(rsi)
		cmp t244(rsi) 1
		CJump EQ print_last_cond_23_loop_body
		INC i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_4_if_true
		islast(r12) = islast(r12) XOR islast(r12)
		t137(rsi) = mov i(r8)
		INC t137(rsi)
		t138(rbx) = mov t137(rsi)
		t138(rbx) = t138(rbx) SHL 3
		t139(rsi) = mov Address (assignment(@assignment) + 0)
		t139(rsi) = t139(rsi) ADD t138(rbx)
		t141(rdi) = mov Address (t139(rsi) + 0)
		call toString return value = t140(rax)
		x(r13) = mov t140(rax)
		i(rbx) = i(rbx) XOR i(rbx)
		t242(rdi) = mov x(r13)
		call __string_length return value = t241(rax)
		t243(rsi) = mov t241(rax)
		cmp i(rbx) t243(rsi)
		set LE t244(rsi)
		cmp t244(rsi) 1
		CJump EQ print_last_cond_23_loop_body
		INC i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_6_if_exit
		t137(rsi) = mov i(r8)
		INC t137(rsi)
		t138(rbx) = mov t137(rsi)
		t138(rbx) = t138(rbx) SHL 3
		t139(rsi) = mov Address (assignment(@assignment) + 0)
		t139(rsi) = t139(rsi) ADD t138(rbx)
		t141(rdi) = mov Address (t139(rsi) + 0)
		call toString return value = t140(rax)
		x(r13) = mov t140(rax)
		i(rbx) = i(rbx) XOR i(rbx)
		t242(rdi) = mov x(r13)
		call __string_length return value = t241(rax)
		t243(rsi) = mov t241(rax)
		cmp i(rbx) t243(rsi)
		set LE t244(rsi)
		cmp t244(rsi) 1
		CJump EQ print_last_cond_23_loop_body
		INC i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_21_inline_enter
		i(rbx) = i(rbx) XOR i(rbx)
		t242(rdi) = mov x(r13)
		call __string_length return value = t241(rax)
		t243(rsi) = mov t241(rax)
		cmp i(rbx) t243(rsi)
		set LE t244(rsi)
		cmp t244(rsi) 1
		CJump EQ print_last_cond_23_loop_body
		INC i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_22_loop_condition
		t242(rdi) = mov x(r13)
		call __string_length return value = t241(rax)
		t243(rsi) = mov t241(rax)
		cmp i(rbx) t243(rsi)
		set LE t244(rsi)
		cmp t244(rsi) 1
		CJump EQ print_last_cond_23_loop_body
		INC i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_23_loop_body
		t246(rdi) = mov x(r13)
		t247(rsi) = mov i(rbx)
		call __string_ord return value = t245(rax)
		t248(rsi) = mov t245(rax)
		t249(rdi) = mov Address (myHash(@myHash) + 0)
		t249(rdi) = t249(rdi) ADD t248(rsi)
		Address (myHash(@myHash) + 0) = mov t249(rdi)
		INC i(rbx)
		t242(rdi) = mov x(r13)
		call __string_length return value = t241(rax)
		t243(rsi) = mov t241(rax)
		cmp i(rbx) t243(rsi)
		set LE t244(rsi)
		cmp t244(rsi) 1
		CJump EQ print_last_cond_23_loop_body
		INC i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_24_loop_increment
		INC i(rbx)
		t242(rdi) = mov x(r13)
		call __string_length return value = t241(rax)
		t243(rsi) = mov t241(rax)
		cmp i(rbx) t243(rsi)
		set LE t244(rsi)
		cmp t244(rsi) 1
		CJump EQ print_last_cond_23_loop_body
		INC i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_7_loop_increment
		INC i(r8)
		cmp i(r8) Address (n(@n) + 0)
		CJump LE print_last_cond_3_loop_body
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_8_loop_exit
		cmp islast(r12) 0
		CJump EQ print_last_cond_9_if_true
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_9_if_true
		x(r13) = mov __const_string_6
		i(rbx) = i(rbx) XOR i(rbx)
		t251(rdi) = mov x(r13)
		call __string_length return value = t250(rax)
		t252(rsi) = mov t250(rax)
		cmp i(rbx) t252(rsi)
		set LE t253(rsi)
		cmp t253(rsi) 1
		CJump EQ print_last_cond_29_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_27_inline_enter
		i(rbx) = i(rbx) XOR i(rbx)
		t251(rdi) = mov x(r13)
		call __string_length return value = t250(rax)
		t252(rsi) = mov t250(rax)
		cmp i(rbx) t252(rsi)
		set LE t253(rsi)
		cmp t253(rsi) 1
		CJump EQ print_last_cond_29_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_28_loop_condition
		t251(rdi) = mov x(r13)
		call __string_length return value = t250(rax)
		t252(rsi) = mov t250(rax)
		cmp i(rbx) t252(rsi)
		set LE t253(rsi)
		cmp t253(rsi) 1
		CJump EQ print_last_cond_29_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_29_loop_body
		t255(rdi) = mov x(r13)
		t256(rsi) = mov i(rbx)
		call __string_ord return value = t254(rax)
		t257(rdi) = mov t254(rax)
		t258(rsi) = mov Address (myHash(@myHash) + 0)
		t258(rsi) = t258(rsi) ADD t257(rdi)
		Address (myHash(@myHash) + 0) = mov t258(rsi)
		INC i(rbx)
		t251(rdi) = mov x(r13)
		call __string_length return value = t250(rax)
		t252(rsi) = mov t250(rax)
		cmp i(rbx) t252(rsi)
		set LE t253(rsi)
		cmp t253(rsi) 1
		CJump EQ print_last_cond_29_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_30_loop_increment
		INC i(rbx)
		t251(rdi) = mov x(r13)
		call __string_length return value = t250(rax)
		t252(rsi) = mov t250(rax)
		cmp i(rbx) t252(rsi)
		set LE t253(rsi)
		cmp t253(rsi) 1
		CJump EQ print_last_cond_29_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_10_if_false
		x(r13) = mov __const_string_7
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_33_inline_enter
		i(rbx) = i(rbx) XOR i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_34_loop_condition
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_35_loop_body
		t264(rdi) = mov x(r13)
		t265(rsi) = mov i(rbx)
		call __string_ord return value = t263(rax)
		t266(rsi) = mov t263(rax)
		t267(rdi) = mov Address (myHash(@myHash) + 0)
		t267(rdi) = t267(rdi) ADD t266(rsi)
		Address (myHash(@myHash) + 0) = mov t267(rdi)
		INC i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_36_loop_increment
		INC i(rbx)
		t260(rdi) = mov x(r13)
		call __string_length return value = t259(rax)
		t261(rsi) = mov t259(rax)
		cmp i(rbx) t261(rsi)
		set LE t262(rsi)
		cmp t262(rsi) 1
		CJump EQ print_last_cond_35_loop_body
		jump print_last_cond_14_block_exit
	print_last_cond_13_if_exit
		t147(rbx) = mov dep(rsi)
		INC t147(rbx)
		t148(rdi) = mov t147(rbx)
		t148(rdi) = t148(rdi) SHL 3
		t149(rbx) = mov Address (assignment(@assignment) + 0)
		t149(rbx) = t149(rbx) ADD t148(rdi)
		Address (t149(rbx) + 0) = mov 1
		t150(rbx) = mov dep(rsi)
		INC t150(rbx)
		t151(rdi) = mov t150(rbx)
		call print_last_cond return value = null
		t152(rbx) = mov dep(rsi)
		INC t152(rbx)
		t153(rbx) = t153(rbx) SHL 3
		t154(rdi) = mov Address (assignment(@assignment) + 0)
		t154(rdi) = t154(rdi) ADD t153(rbx)
		Address (t154(rdi) + 0) = mov 0
		INC t155(rsi)
		t156(rdi) = mov t155(rsi)
		call print_last_cond return value = null
	print_last_cond_14_block_exit
}
payoff a(r9) b(r8) {
	payoff_0_block_enter
		a(r9) = mov t83(rdi)
		b(r8) = mov t84(rsi)
		ret(rbx) = ret(rbx) XOR ret(rbx)
		i(rdi) = i(rdi) XOR i(rdi)
		cmp i(rdi) 3
		CJump LE payoff_2_loop_body
		ret ret(rbx)
		jump payoff_8_block_exit
	payoff_1_loop_condition
		cmp i(rdi) 3
		CJump LE payoff_2_loop_body
		ret ret(rbx)
		jump payoff_8_block_exit
	payoff_2_loop_body
		t86(rsi) = mov i(rdi)
		t86(rsi) = t86(rsi) SHL 3
		t87(r11) = mov a(r9)
		t87(r11) = t87(r11) ADD t86(rsi)
		t88(rsi) = mov i(rdi)
		t88(rsi) = t88(rsi) SHL 3
		t89(r10) = mov b(r8)
		t89(r10) = t89(r10) ADD t88(rsi)
		t91(rsi) = mov Address (t87(r11) + 0)
		cmp t91(rsi) Address (t89(r10) + 0)
		CJump NEQ payoff_3_if_true
		INC i(rdi)
		cmp i(rdi) 3
		CJump LE payoff_2_loop_body
		ret ret(rbx)
		jump payoff_8_block_exit
	payoff_3_if_true
		INC ret(rbx)
		INC i(rdi)
		cmp i(rdi) 3
		CJump LE payoff_2_loop_body
		ret ret(rbx)
		jump payoff_8_block_exit
	payoff_6_loop_increment
		INC i(rdi)
		cmp i(rdi) 3
		CJump LE payoff_2_loop_body
		ret ret(rbx)
		jump payoff_8_block_exit
	payoff_7_loop_exit
		ret ret(rbx)
	payoff_8_block_exit
}
main {
	main_0_block_enter
		Address (k(@k) + 0) = mov 5
		t0(rsi) = mov Address (k(@k) + 0)
		t0(rsi) = t0(rsi) SHL 1
		INC t1(rsi)
		Address (n(@n) + 0) = mov t1(rsi)
		Address (m(@m) + 0) = mov Address (k(@k) + 0)
		Address (last(@last) + 0) = mov 1
		x(rdi) = mov __const_string_0
		i(rsi) = i(rsi) XOR i(rsi)
		call __string_length return value = t268(rax)
		t270(rbx) = mov t268(rax)
		cmp i(rsi) t270(rbx)
		set LE t271(rbx)
		cmp t271(rbx) 1
		CJump EQ main_8_loop_body
		t5(rsi) = mov Address (m(@m) + 0)
		INC t5(rsi)
		t5(rsi) = t5(rsi) SHL 3
		malloc t4(rsi) t5(rsi)
		Address (t4(rsi) + 0) = mov Address (m(@m) + 0)
		t4(rsi) = t4(rsi) ADD 8
		Address (sat(@sat) + 0) = mov t4(rsi)
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_6_inline_enter
		i(rsi) = i(rsi) XOR i(rsi)
		call __string_length return value = t268(rax)
		t270(rbx) = mov t268(rax)
		cmp i(rsi) t270(rbx)
		set LE t271(rbx)
		cmp t271(rbx) 1
		CJump EQ main_8_loop_body
		t5(rsi) = mov Address (m(@m) + 0)
		INC t5(rsi)
		t5(rsi) = t5(rsi) SHL 3
		malloc t4(rsi) t5(rsi)
		Address (t4(rsi) + 0) = mov Address (m(@m) + 0)
		t4(rsi) = t4(rsi) ADD 8
		Address (sat(@sat) + 0) = mov t4(rsi)
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_7_loop_condition
		call __string_length return value = t268(rax)
		t270(rbx) = mov t268(rax)
		cmp i(rsi) t270(rbx)
		set LE t271(rbx)
		cmp t271(rbx) 1
		CJump EQ main_8_loop_body
		t5(rsi) = mov Address (m(@m) + 0)
		INC t5(rsi)
		t5(rsi) = t5(rsi) SHL 3
		malloc t4(rsi) t5(rsi)
		Address (t4(rsi) + 0) = mov Address (m(@m) + 0)
		t4(rsi) = t4(rsi) ADD 8
		Address (sat(@sat) + 0) = mov t4(rsi)
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_8_loop_body
		call __string_ord return value = t272(rax)
		t275(r12) = mov t272(rax)
		t276(rbx) = mov Address (myHash(@myHash) + 0)
		t276(rbx) = t276(rbx) ADD t275(r12)
		Address (myHash(@myHash) + 0) = mov t276(rbx)
		INC i(rsi)
		call __string_length return value = t268(rax)
		t270(rbx) = mov t268(rax)
		cmp i(rsi) t270(rbx)
		set LE t271(rbx)
		cmp t271(rbx) 1
		CJump EQ main_8_loop_body
		t5(rsi) = mov Address (m(@m) + 0)
		INC t5(rsi)
		t5(rsi) = t5(rsi) SHL 3
		malloc t4(rsi) t5(rsi)
		Address (t4(rsi) + 0) = mov Address (m(@m) + 0)
		t4(rsi) = t4(rsi) ADD 8
		Address (sat(@sat) + 0) = mov t4(rsi)
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_9_loop_increment
		INC i(rsi)
		call __string_length return value = t268(rax)
		t270(rbx) = mov t268(rax)
		cmp i(rsi) t270(rbx)
		set LE t271(rbx)
		cmp t271(rbx) 1
		CJump EQ main_8_loop_body
		t5(rsi) = mov Address (m(@m) + 0)
		INC t5(rsi)
		t5(rsi) = t5(rsi) SHL 3
		malloc t4(rsi) t5(rsi)
		Address (t4(rsi) + 0) = mov Address (m(@m) + 0)
		t4(rsi) = t4(rsi) ADD 8
		Address (sat(@sat) + 0) = mov t4(rsi)
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_11_inline_exit
		t5(rsi) = mov Address (m(@m) + 0)
		INC t5(rsi)
		t5(rsi) = t5(rsi) SHL 3
		malloc t4(rsi) t5(rsi)
		Address (t4(rsi) + 0) = mov Address (m(@m) + 0)
		t4(rsi) = t4(rsi) ADD 8
		Address (sat(@sat) + 0) = mov t4(rsi)
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_1_loop_condition
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_2_loop_body
		t9(rsi) = mov 3
		INC t9(rsi)
		t9(rsi) = t9(rsi) SHL 3
		malloc t8(rsi) t9(rsi)
		Address (t8(rsi) + 0) = mov 3
		t8(rsi) = t8(rsi) ADD 8
		clause(rbx) = mov t8(rsi)
		t10(rdi) = t10(rdi) XOR t10(rdi)
		t10(rdi) = t10(rdi) SHL 3
		Address (clause(rbx) + t10(rdi)) = mov Address (last(@last) + 0)
		t13(rdi) = mov 1
		t13(rdi) = t13(rdi) SHL 3
		t14(rsi) = mov clause(rbx)
		t14(rsi) = t14(rsi) ADD t13(rdi)
		t15(rdi) = mov Address (last(@last) + 0)
		INC t15(rdi)
		Address (t14(rsi) + 0) = mov t15(rdi)
		t16(rsi) = mov 2
		t16(rsi) = t16(rsi) SHL 3
		t17(rdi) = mov clause(rbx)
		t17(rdi) = t17(rdi) ADD t16(rsi)
		t18(rsi) = mov Address (last(@last) + 0)
		t18(rsi) = t18(rsi) ADD 2
		NEG t19(rsi)
		Address (t17(rdi) + 0) = mov t19(rsi)
		t20(rsi) = mov Address (last(@last) + 0)
		t20(rsi) = t20(rsi) ADD 2
		Address (last(@last) + 0) = mov t20(rsi)
		t21(rdi) = mov i(r12)
		t21(rdi) = t21(rdi) SHL 3
		t22(rsi) = mov Address (sat(@sat) + 0)
		t22(rsi) = t22(rsi) ADD t21(rdi)
		Address (t22(rsi) + 0) = mov clause(rbx)
		INC i(r12)
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_3_loop_increment
		INC i(r12)
		cmp i(r12) Address (m(@m) + 0)
		CJump LE main_2_loop_body
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_4_loop_exit
		t24(rsi) = mov Address (n(@n) + 0)
		INC t24(rsi)
		t25(rbx) = mov t24(rsi)
		INC t25(rbx)
		t25(rbx) = t25(rbx) SHL 3
		malloc t23(rbx) t25(rbx)
		Address (t23(rbx) + 0) = mov t24(rsi)
		t23(rbx) = t23(rbx) ADD 8
		Address (assignment(@assignment) + 0) = mov t23(rbx)
		t27(rsi) = mov Address (n(@n) + 0)
		INC t27(rsi)
		t28(rbx) = mov t27(rsi)
		INC t28(rbx)
		t28(rbx) = t28(rbx) SHL 3
		malloc t26(rbx) t28(rbx)
		Address (t26(rbx) + 0) = mov t27(rsi)
		t26(rbx) = t26(rbx) ADD 8
		Address (cond_ass(@cond_ass) + 0) = mov t26(rbx)
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_12_inline_enter
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t277(rbx)
		cmp t277(rbx) 1
		CJump EQ main_13_if_true
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_13_if_true
		call check return value = t278(rax)
		t279(rsi) = mov t278(rax)
		cmp t279(rsi) 1
		set EQ t280(rsi)
		cmp t280(rsi) 1
		CJump EQ main_14_if_true
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_14_if_true
		t281(rdi) = mov __const_string_10
		call myprint return value = null
		t282(rdi) = t282(rdi) XOR t282(rdi)
		call print_cond return value = null
		t283(rdi) = mov __const_string_11
		call myprint return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_18_if_exit
		t284(rbx) = mov dep(rsi)
		INC t284(rbx)
		t285(rdi) = mov t284(rbx)
		t285(rdi) = t285(rdi) SHL 3
		t286(rbx) = mov Address (assignment(@assignment) + 0)
		t286(rbx) = t286(rbx) ADD t285(rdi)
		Address (t286(rbx) + 0) = mov 1
		t287(rbx) = mov dep(rsi)
		INC t287(rbx)
		t288(rdi) = mov t287(rbx)
		call dfs return value = null
		t289(rbx) = mov dep(rsi)
		INC t289(rbx)
		t290(rdi) = mov t289(rbx)
		t290(rdi) = t290(rdi) SHL 3
		t291(rbx) = mov Address (assignment(@assignment) + 0)
		t291(rbx) = t291(rbx) ADD t290(rdi)
		Address (t291(rbx) + 0) = mov 0
		INC t292(rsi)
		t293(rdi) = mov t292(rsi)
		call dfs return value = null
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_19_inline_exit
		dep(rsi) = dep(rsi) XOR dep(rsi)
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_20_inline_enter
		cmp dep(rsi) Address (n(@n) + 0)
		set EQ t294(rbx)
		cmp t294(rbx) 1
		CJump EQ main_21_if_true
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_21_if_true
		t295(rdi) = mov __const_string_12
		call myprint return value = null
		islast(rbx) = mov 1
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) Address (n(@n) + 0)
		set LE t296(rsi)
		cmp t296(rsi) 1
		CJump EQ main_23_loop_body
		cmp islast(rbx) 0
		set EQ t308(rsi)
		cmp t308(rsi) 1
		CJump EQ main_29_if_true
		t310(rdi) = mov __const_string_14
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_22_loop_condition
		cmp i(r12) Address (n(@n) + 0)
		set LE t296(rsi)
		cmp t296(rsi) 1
		CJump EQ main_23_loop_body
		cmp islast(rbx) 0
		set EQ t308(rsi)
		cmp t308(rsi) 1
		CJump EQ main_29_if_true
		t310(rdi) = mov __const_string_14
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_23_loop_body
		t297(rsi) = mov i(r12)
		INC t297(rsi)
		t298(rdi) = mov t297(rsi)
		t298(rdi) = t298(rdi) SHL 3
		t299(rsi) = mov Address (assignment(@assignment) + 0)
		t299(rsi) = t299(rsi) ADD t298(rdi)
		cmp Address (t299(rsi) + 0) 1
		set EQ t300(rsi)
		cmp t300(rsi) 1
		CJump EQ main_24_if_true
		t301(rsi) = mov i(r12)
		INC t301(rsi)
		t302(rdi) = mov t301(rsi)
		t302(rdi) = t302(rdi) SHL 3
		t303(rsi) = mov Address (assignment(@assignment) + 0)
		t303(rsi) = t303(rsi) ADD t302(rdi)
		t305(rdi) = mov Address (t303(rsi) + 0)
		call toString return value = t304(rax)
		t307(rdi) = mov t304(rax)
		call myprint return value = null
		INC i(r12)
		cmp i(r12) Address (n(@n) + 0)
		set LE t296(rsi)
		cmp t296(rsi) 1
		CJump EQ main_23_loop_body
		cmp islast(rbx) 0
		set EQ t308(rsi)
		cmp t308(rsi) 1
		CJump EQ main_29_if_true
		t310(rdi) = mov __const_string_14
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_24_if_true
		islast(rbx) = islast(rbx) XOR islast(rbx)
		t301(rsi) = mov i(r12)
		INC t301(rsi)
		t302(rdi) = mov t301(rsi)
		t302(rdi) = t302(rdi) SHL 3
		t303(rsi) = mov Address (assignment(@assignment) + 0)
		t303(rsi) = t303(rsi) ADD t302(rdi)
		t305(rdi) = mov Address (t303(rsi) + 0)
		call toString return value = t304(rax)
		t307(rdi) = mov t304(rax)
		call myprint return value = null
		INC i(r12)
		cmp i(r12) Address (n(@n) + 0)
		set LE t296(rsi)
		cmp t296(rsi) 1
		CJump EQ main_23_loop_body
		cmp islast(rbx) 0
		set EQ t308(rsi)
		cmp t308(rsi) 1
		CJump EQ main_29_if_true
		t310(rdi) = mov __const_string_14
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_26_if_exit
		t301(rsi) = mov i(r12)
		INC t301(rsi)
		t302(rdi) = mov t301(rsi)
		t302(rdi) = t302(rdi) SHL 3
		t303(rsi) = mov Address (assignment(@assignment) + 0)
		t303(rsi) = t303(rsi) ADD t302(rdi)
		t305(rdi) = mov Address (t303(rsi) + 0)
		call toString return value = t304(rax)
		t307(rdi) = mov t304(rax)
		call myprint return value = null
		INC i(r12)
		cmp i(r12) Address (n(@n) + 0)
		set LE t296(rsi)
		cmp t296(rsi) 1
		CJump EQ main_23_loop_body
		cmp islast(rbx) 0
		set EQ t308(rsi)
		cmp t308(rsi) 1
		CJump EQ main_29_if_true
		t310(rdi) = mov __const_string_14
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_27_loop_increment
		INC i(r12)
		cmp i(r12) Address (n(@n) + 0)
		set LE t296(rsi)
		cmp t296(rsi) 1
		CJump EQ main_23_loop_body
		cmp islast(rbx) 0
		set EQ t308(rsi)
		cmp t308(rsi) 1
		CJump EQ main_29_if_true
		t310(rdi) = mov __const_string_14
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_28_loop_exit
		cmp islast(rbx) 0
		set EQ t308(rsi)
		cmp t308(rsi) 1
		CJump EQ main_29_if_true
		t310(rdi) = mov __const_string_14
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_29_if_true
		t309(rdi) = mov __const_string_13
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_30_if_false
		t310(rdi) = mov __const_string_14
		call myprint return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_33_if_exit
		t311(rbx) = mov dep(rsi)
		INC t311(rbx)
		t312(rbx) = t312(rbx) SHL 3
		t313(rdi) = mov Address (assignment(@assignment) + 0)
		t313(rdi) = t313(rdi) ADD t312(rbx)
		Address (t313(rdi) + 0) = mov 1
		t314(rbx) = mov dep(rsi)
		INC t314(rbx)
		t315(rdi) = mov t314(rbx)
		call print_last_cond return value = null
		t316(rbx) = mov dep(rsi)
		INC t316(rbx)
		t317(rdi) = mov t316(rbx)
		t317(rdi) = t317(rdi) SHL 3
		t318(rbx) = mov Address (assignment(@assignment) + 0)
		t318(rbx) = t318(rbx) ADD t317(rdi)
		Address (t318(rbx) + 0) = mov 0
		INC t319(rsi)
		t320(rdi) = mov t319(rsi)
		call print_last_cond return value = null
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
		jump main_5_block_exit
	main_34_inline_exit
		t32(rdi) = mov Address (myHash(@myHash) + 0)
		call println_Int return value = t31(rax)
		ret 0
	main_5_block_exit
}
print_cond dep(rbx) {
	print_cond_0_block_enter
		dep(rbx) = mov t35(rdi)
		cmp dep(rbx) Address (n(@n) + 0)
		CJump EQ print_cond_1_if_true
		t63(rsi) = mov dep(rbx)
		INC t63(rsi)
		t64(rdi) = mov t63(rsi)
		t64(rdi) = t64(rdi) SHL 3
		t65(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t65(rsi) = t65(rsi) ADD t64(rdi)
		Address (t65(rsi) + 0) = mov 1
		t66(rsi) = mov dep(rbx)
		INC t66(rsi)
		t67(rdi) = mov t66(rsi)
		call print_cond return value = null
		t68(rsi) = mov dep(rbx)
		INC t68(rsi)
		t69(rsi) = t69(rsi) SHL 3
		t70(rdi) = mov Address (cond_ass(@cond_ass) + 0)
		t70(rdi) = t70(rdi) ADD t69(rsi)
		Address (t70(rdi) + 0) = mov 0
		t71(rsi) = mov dep(rbx)
		INC t71(rsi)
		t72(rdi) = mov t71(rsi)
		call print_cond return value = null
		jump print_cond_11_block_exit
	print_cond_1_if_true
		a(r13) = mov Address (cond_ass(@cond_ass) + 0)
		b(rbx) = mov Address (assignment(@assignment) + 0)
		ret(r8) = ret(r8) XOR ret(r8)
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) 3
		set LE t321(rsi)
		cmp t321(rsi) 1
		CJump EQ print_cond_14_loop_body
		t40(rsi) = mov ret(r8)
		t42(rdi) = mov t40(rsi)
		call toString return value = t41(rax)
		t43(rsi) = mov t41(rax)
		t45(rdi) = mov __const_string_1
		call __string_connection return value = t44(rax)
		t49(rdi) = mov t44(rax)
		t50(rsi) = mov __const_string_2
		call __string_connection return value = t48(rax)
		x(rdi) = mov t48(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_12_inline_enter
		ret(r8) = ret(r8) XOR ret(r8)
		i(r12) = i(r12) XOR i(r12)
		cmp i(r12) 3
		set LE t321(rsi)
		cmp t321(rsi) 1
		CJump EQ print_cond_14_loop_body
		t40(rsi) = mov ret(r8)
		t42(rdi) = mov t40(rsi)
		call toString return value = t41(rax)
		t43(rsi) = mov t41(rax)
		t45(rdi) = mov __const_string_1
		call __string_connection return value = t44(rax)
		t49(rdi) = mov t44(rax)
		t50(rsi) = mov __const_string_2
		call __string_connection return value = t48(rax)
		x(rdi) = mov t48(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_13_loop_condition
		cmp i(r12) 3
		set LE t321(rsi)
		cmp t321(rsi) 1
		CJump EQ print_cond_14_loop_body
		t40(rsi) = mov ret(r8)
		t42(rdi) = mov t40(rsi)
		call toString return value = t41(rax)
		t43(rsi) = mov t41(rax)
		t45(rdi) = mov __const_string_1
		call __string_connection return value = t44(rax)
		t49(rdi) = mov t44(rax)
		t50(rsi) = mov __const_string_2
		call __string_connection return value = t48(rax)
		x(rdi) = mov t48(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_14_loop_body
		t322(rdi) = mov i(r12)
		t322(rdi) = t322(rdi) SHL 3
		t323(rsi) = mov a(r13)
		t323(rsi) = t323(rsi) ADD t322(rdi)
		t324(rdi) = mov i(r12)
		t324(rdi) = t324(rdi) SHL 3
		t325(r9) = mov b(rbx)
		t325(r9) = t325(r9) ADD t324(rdi)
		t327(rsi) = mov Address (t323(rsi) + 0)
		cmp t327(rsi) Address (t325(r9) + 0)
		set NEQ t326(rsi)
		cmp t326(rsi) 1
		CJump EQ print_cond_15_if_true
		INC i(r12)
		cmp i(r12) 3
		set LE t321(rsi)
		cmp t321(rsi) 1
		CJump EQ print_cond_14_loop_body
		t40(rsi) = mov ret(r8)
		t42(rdi) = mov t40(rsi)
		call toString return value = t41(rax)
		t43(rsi) = mov t41(rax)
		t45(rdi) = mov __const_string_1
		call __string_connection return value = t44(rax)
		t49(rdi) = mov t44(rax)
		t50(rsi) = mov __const_string_2
		call __string_connection return value = t48(rax)
		x(rdi) = mov t48(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_15_if_true
		INC ret(r8)
		INC i(r12)
		cmp i(r12) 3
		set LE t321(rsi)
		cmp t321(rsi) 1
		CJump EQ print_cond_14_loop_body
		t40(rsi) = mov ret(r8)
		t42(rdi) = mov t40(rsi)
		call toString return value = t41(rax)
		t43(rsi) = mov t41(rax)
		t45(rdi) = mov __const_string_1
		call __string_connection return value = t44(rax)
		t49(rdi) = mov t44(rax)
		t50(rsi) = mov __const_string_2
		call __string_connection return value = t48(rax)
		x(rdi) = mov t48(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_18_loop_increment
		INC i(r12)
		cmp i(r12) 3
		set LE t321(rsi)
		cmp t321(rsi) 1
		CJump EQ print_cond_14_loop_body
		t40(rsi) = mov ret(r8)
		t42(rdi) = mov t40(rsi)
		call toString return value = t41(rax)
		t43(rsi) = mov t41(rax)
		t45(rdi) = mov __const_string_1
		call __string_connection return value = t44(rax)
		t49(rdi) = mov t44(rax)
		t50(rsi) = mov __const_string_2
		call __string_connection return value = t48(rax)
		x(rdi) = mov t48(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_19_loop_exit
		t40(rsi) = mov ret(r8)
		t42(rdi) = mov t40(rsi)
		call toString return value = t41(rax)
		t43(rsi) = mov t41(rax)
		t45(rdi) = mov __const_string_1
		call __string_connection return value = t44(rax)
		t49(rdi) = mov t44(rax)
		t50(rsi) = mov __const_string_2
		call __string_connection return value = t48(rax)
		x(rdi) = mov t48(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_20_inline_exit
		t42(rdi) = mov t40(rsi)
		call toString return value = t41(rax)
		t43(rsi) = mov t41(rax)
		t45(rdi) = mov __const_string_1
		call __string_connection return value = t44(rax)
		t49(rdi) = mov t44(rax)
		t50(rsi) = mov __const_string_2
		call __string_connection return value = t48(rax)
		x(rdi) = mov t48(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_21_inline_enter
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_22_loop_condition
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_23_loop_body
		t335(rsi) = mov i(r12)
		call __string_ord return value = t333(rax)
		t336(rsi) = mov t333(rax)
		t337(rbx) = mov Address (myHash(@myHash) + 0)
		t337(rbx) = t337(rbx) ADD t336(rsi)
		Address (myHash(@myHash) + 0) = mov t337(rbx)
		INC i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_24_loop_increment
		INC i(r12)
		call __string_length return value = t329(rax)
		t331(rsi) = mov t329(rax)
		cmp i(r12) t331(rsi)
		set LE t332(rsi)
		cmp t332(rsi) 1
		CJump EQ print_cond_23_loop_body
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_26_inline_exit
		i(rbx) = i(rbx) XOR i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_2_loop_condition
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_3_loop_body
		t54(rsi) = mov i(rbx)
		t54(rsi) = t54(rsi) MOD 10
		cmp t54(rsi) 0
		CJump EQ print_cond_4_if_true
		INC i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_4_if_true
		t56(rsi) = mov i(rbx)
		INC t56(rsi)
		t57(rdi) = mov t56(rsi)
		t57(rdi) = t57(rdi) SHL 3
		t58(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t58(rsi) = t58(rsi) ADD t57(rdi)
		t60(rdi) = mov Address (t58(rsi) + 0)
		call toString return value = t59(rax)
		x(rdi) = mov t59(rax)
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t338(rax)
		t340(rsi) = mov t338(rax)
		cmp i(r12) t340(rsi)
		set LE t341(rsi)
		cmp t341(rsi) 1
		CJump EQ print_cond_29_loop_body
		INC i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_27_inline_enter
		i(r12) = i(r12) XOR i(r12)
		call __string_length return value = t338(rax)
		t340(rsi) = mov t338(rax)
		cmp i(r12) t340(rsi)
		set LE t341(rsi)
		cmp t341(rsi) 1
		CJump EQ print_cond_29_loop_body
		INC i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_28_loop_condition
		call __string_length return value = t338(rax)
		t340(rsi) = mov t338(rax)
		cmp i(r12) t340(rsi)
		set LE t341(rsi)
		cmp t341(rsi) 1
		CJump EQ print_cond_29_loop_body
		INC i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_29_loop_body
		t344(rsi) = mov i(r12)
		call __string_ord return value = t342(rax)
		t345(r8) = mov t342(rax)
		t346(rsi) = mov Address (myHash(@myHash) + 0)
		t346(rsi) = t346(rsi) ADD t345(r8)
		Address (myHash(@myHash) + 0) = mov t346(rsi)
		INC i(r12)
		call __string_length return value = t338(rax)
		t340(rsi) = mov t338(rax)
		cmp i(r12) t340(rsi)
		set LE t341(rsi)
		cmp t341(rsi) 1
		CJump EQ print_cond_29_loop_body
		INC i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_30_loop_increment
		INC i(r12)
		call __string_length return value = t338(rax)
		t340(rsi) = mov t338(rax)
		cmp i(r12) t340(rsi)
		set LE t341(rsi)
		cmp t341(rsi) 1
		CJump EQ print_cond_29_loop_body
		INC i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_7_loop_increment
		INC i(rbx)
		cmp i(rbx) Address (n(@n) + 0)
		CJump LE print_cond_3_loop_body
		jump print_cond_11_block_exit
	print_cond_10_if_exit
		t63(rsi) = mov dep(rbx)
		INC t63(rsi)
		t64(rdi) = mov t63(rsi)
		t64(rdi) = t64(rdi) SHL 3
		t65(rsi) = mov Address (cond_ass(@cond_ass) + 0)
		t65(rsi) = t65(rsi) ADD t64(rdi)
		Address (t65(rsi) + 0) = mov 1
		t66(rsi) = mov dep(rbx)
		INC t66(rsi)
		t67(rdi) = mov t66(rsi)
		call print_cond return value = null
		t68(rsi) = mov dep(rbx)
		INC t68(rsi)
		t69(rsi) = t69(rsi) SHL 3
		t70(rdi) = mov Address (cond_ass(@cond_ass) + 0)
		t70(rdi) = t70(rdi) ADD t69(rsi)
		Address (t70(rdi) + 0) = mov 0
		t71(rsi) = mov dep(rbx)
		INC t71(rsi)
		t72(rdi) = mov t71(rsi)
		call print_cond return value = null
	print_cond_11_block_exit
}
check {
	check_0_block_enter
		i(r9) = i(r9) XOR i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_1_loop_condition
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_2_loop_body
		succ(rdi) = succ(rdi) XOR succ(rdi)
		j(r11) = j(r11) XOR j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_3_loop_condition
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_4_loop_body
		t95(rsi) = mov i(r9)
		t95(rsi) = t95(rsi) SHL 3
		t96(r8) = mov Address (sat(@sat) + 0)
		t96(r8) = t96(r8) ADD t95(rsi)
		t97(rsi) = mov j(r11)
		t97(rsi) = t97(rsi) SHL 3
		t98(r8) = mov Address (t96(r8) + 0)
		t98(r8) = t98(r8) ADD t97(rsi)
		var(r8) = mov Address (t98(r8) + 0)
		cmp var(r8) 0
		set GR t100(rsi)
		cmp t100(rsi) 1
		CJump NEQ check_6_logical_false
		t101(rsi) = mov var(r8)
		t101(rsi) = t101(rsi) SHL 3
		t102(r10) = mov Address (assignment(@assignment) + 0)
		t102(r10) = t102(r10) ADD t101(rsi)
		cmp Address (t102(r10) + 0) 1
		set EQ t99(rsi)
		cmp t99(rsi) 1
		CJump EQ check_8_if_true
		cmp var(r8) 0
		set LE t105(rsi)
		cmp t105(rsi) 1
		CJump NEQ check_12_logical_false
		t106(rsi) = mov var(r8)
		NEG t106(rsi)
		t107(r8) = mov t106(rsi)
		t107(r8) = t107(r8) SHL 3
		t108(rsi) = mov Address (assignment(@assignment) + 0)
		t108(rsi) = t108(rsi) ADD t107(r8)
		cmp Address (t108(rsi) + 0) 0
		set EQ t104(rsi)
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_5_logical_true
		t101(rsi) = mov var(r8)
		t101(rsi) = t101(rsi) SHL 3
		t102(r10) = mov Address (assignment(@assignment) + 0)
		t102(r10) = t102(r10) ADD t101(rsi)
		cmp Address (t102(r10) + 0) 1
		set EQ t99(rsi)
		cmp t99(rsi) 1
		CJump EQ check_8_if_true
		cmp var(r8) 0
		set LE t105(rsi)
		cmp t105(rsi) 1
		CJump NEQ check_12_logical_false
		t106(rsi) = mov var(r8)
		NEG t106(rsi)
		t107(r8) = mov t106(rsi)
		t107(r8) = t107(r8) SHL 3
		t108(rsi) = mov Address (assignment(@assignment) + 0)
		t108(rsi) = t108(rsi) ADD t107(r8)
		cmp Address (t108(rsi) + 0) 0
		set EQ t104(rsi)
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_6_logical_false
		t99(rsi) = t99(rsi) XOR t99(rsi)
		cmp t99(rsi) 1
		CJump EQ check_8_if_true
		cmp var(r8) 0
		set LE t105(rsi)
		cmp t105(rsi) 1
		CJump NEQ check_12_logical_false
		t106(rsi) = mov var(r8)
		NEG t106(rsi)
		t107(r8) = mov t106(rsi)
		t107(r8) = t107(r8) SHL 3
		t108(rsi) = mov Address (assignment(@assignment) + 0)
		t108(rsi) = t108(rsi) ADD t107(r8)
		cmp Address (t108(rsi) + 0) 0
		set EQ t104(rsi)
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_7_logical_exit
		cmp t99(rsi) 1
		CJump EQ check_8_if_true
		cmp var(r8) 0
		set LE t105(rsi)
		cmp t105(rsi) 1
		CJump NEQ check_12_logical_false
		t106(rsi) = mov var(r8)
		NEG t106(rsi)
		t107(r8) = mov t106(rsi)
		t107(r8) = t107(r8) SHL 3
		t108(rsi) = mov Address (assignment(@assignment) + 0)
		t108(rsi) = t108(rsi) ADD t107(r8)
		cmp Address (t108(rsi) + 0) 0
		set EQ t104(rsi)
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_8_if_true
		succ(rdi) = mov 1
		cmp var(r8) 0
		set LE t105(rsi)
		cmp t105(rsi) 1
		CJump NEQ check_12_logical_false
		t106(rsi) = mov var(r8)
		NEG t106(rsi)
		t107(r8) = mov t106(rsi)
		t107(r8) = t107(r8) SHL 3
		t108(rsi) = mov Address (assignment(@assignment) + 0)
		t108(rsi) = t108(rsi) ADD t107(r8)
		cmp Address (t108(rsi) + 0) 0
		set EQ t104(rsi)
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_10_if_exit
		cmp var(r8) 0
		set LE t105(rsi)
		cmp t105(rsi) 1
		CJump NEQ check_12_logical_false
		t106(rsi) = mov var(r8)
		NEG t106(rsi)
		t107(r8) = mov t106(rsi)
		t107(r8) = t107(r8) SHL 3
		t108(rsi) = mov Address (assignment(@assignment) + 0)
		t108(rsi) = t108(rsi) ADD t107(r8)
		cmp Address (t108(rsi) + 0) 0
		set EQ t104(rsi)
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_11_logical_true
		t106(rsi) = mov var(r8)
		NEG t106(rsi)
		t107(r8) = mov t106(rsi)
		t107(r8) = t107(r8) SHL 3
		t108(rsi) = mov Address (assignment(@assignment) + 0)
		t108(rsi) = t108(rsi) ADD t107(r8)
		cmp Address (t108(rsi) + 0) 0
		set EQ t104(rsi)
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_12_logical_false
		t104(rsi) = t104(rsi) XOR t104(rsi)
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_13_logical_exit
		cmp t104(rsi) 1
		CJump EQ check_14_if_true
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_14_if_true
		succ(rdi) = mov 1
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_17_loop_increment
		INC j(r11)
		cmp j(r11) 3
		CJump LE check_4_loop_body
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_18_loop_exit
		cmp succ(rdi) 0
		CJump EQ check_19_if_true
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_19_if_true
		ret 0
		jump check_24_block_exit
	check_22_loop_increment
		INC i(r9)
		cmp i(r9) Address (m(@m) + 0)
		CJump LE check_2_loop_body
		ret 1
		jump check_24_block_exit
	check_23_loop_exit
		ret 1
	check_24_block_exit
}
