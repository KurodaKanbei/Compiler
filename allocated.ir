__global_init {
	__global_init_1_block_exit
}
foo d(r8) x(rbx) y(r12) {
	foo_0_block_enter
		d(r8) = mov t0(rdi)
		x(rbx) = mov t1(rsi)
		y(r12) = mov t2(rdx)
		t3(rsi) = mov d(r8)
		t3(rsi) = t3(rsi) MUL 1000
		t4(rdi) = mov x(rbx)
		t4(rdi) = t4(rdi) MUL 10
		t5(rsi) = t5(rsi) ADD t4(rdi)
		t6(rsi) = t6(rsi) ADD y(r12)
		t8(rdi) = mov t6(rsi)
		call toString return value = t7(rax)
		t10(rdi) = mov t7(rax)
		call println return value = null
		cmp d(r8) 1
		CJump EQ foo_4_block_exit
		t(rsi) = mov x(rbx)
		x(rbx) = mov y(r12)
		y(r12) = mov t(rsi)
		t12(rdi) = mov 1
		t13(rsi) = mov x(rbx)
		t14(rdx) = mov y(r12)
		call foo return value = null
		t15(rsi) = mov d(r8)
		t15(rsi) = t15(rsi) MUL 1000
		t16(rbx) = t16(rbx) MUL 10
		t17(rsi) = t17(rsi) ADD t16(rbx)
		t18(rsi) = t18(rsi) ADD y(r12)
		t20(rdi) = mov t18(rsi)
		call toString return value = t19(rax)
		t22(rdi) = mov t19(rax)
		call println return value = null
		jump foo_4_block_exit
	foo_3_if_exit
		t(rsi) = mov x(rbx)
		x(rbx) = mov y(r12)
		y(r12) = mov t(rsi)
		t12(rdi) = mov 1
		t13(rsi) = mov x(rbx)
		t14(rdx) = mov y(r12)
		call foo return value = null
		t15(rsi) = mov d(r8)
		t15(rsi) = t15(rsi) MUL 1000
		t16(rbx) = t16(rbx) MUL 10
		t17(rsi) = t17(rsi) ADD t16(rbx)
		t18(rsi) = t18(rsi) ADD y(r12)
		t20(rdi) = mov t18(rsi)
		call toString return value = t19(rax)
		t22(rdi) = mov t19(rax)
		call println return value = null
	foo_4_block_exit
}
main {
	main_0_block_enter
		a(rsi) = mov 3100
		t27(rdi) = mov a(rsi)
		call toString return value = t26(rax)
		t29(rdi) = mov t26(rax)
		call println return value = null
		a(rsi) = mov 3100
		t48(rdi) = mov a(rsi)
		call toString return value = t47(rax)
		t50(rdi) = mov t47(rax)
		call println return value = null
		d(r8) = mov 7
		x(rsi) = mov 5
		y(r12) = mov 3
		t51(rdi) = mov d(r8)
		t51(rdi) = t51(rdi) MUL 1000
		t52(rbx) = mov x(rsi)
		t52(rbx) = t52(rbx) MUL 10
		t53(rdi) = t53(rdi) ADD t52(rbx)
		t54(rbx) = mov t53(rdi)
		t54(rbx) = t54(rbx) ADD y(r12)
		t56(rdi) = mov t54(rbx)
		call toString return value = t55(rax)
		t58(rdi) = mov t55(rax)
		call println return value = null
		cmp d(r8) 1
		set EQ t59(rbx)
		cmp t59(rbx) 1
		CJump EQ main_16_inline_exit
		t(rbx) = mov x(rsi)
		x(rsi) = mov y(r12)
		y(r12) = mov t(rbx)
		t60(rdi) = mov 1
		t62(rdx) = mov y(r12)
		call foo return value = null
		t63(rbx) = mov d(r8)
		t63(rbx) = t63(rbx) MUL 1000
		t64(rsi) = t64(rsi) MUL 10
		t65(rbx) = t65(rbx) ADD t64(rsi)
		t66(rsi) = mov t65(rbx)
		t66(rsi) = t66(rsi) ADD y(r12)
		t68(rdi) = mov t66(rsi)
		call toString return value = t67(rax)
		t70(rdi) = mov t67(rax)
		call println return value = null
		t34(rsi) = mov 10
		INC t34(rsi)
		t34(rsi) = t34(rsi) SHL 3
		malloc t33(rsi) t34(rsi)
		Address (t33(rsi) + 0) = mov 10
		t36(rsi) = mov 2
		INC t36(rsi)
		t36(rsi) = t36(rsi) SHL 3
		malloc t35(rsi) t36(rsi)
		Address (t35(rsi) + 0) = mov 2
		ret 0
		jump main_5_block_exit
	main_4_loop_exit
		t27(rdi) = mov a(rsi)
		call toString return value = t26(rax)
		t29(rdi) = mov t26(rax)
		call println return value = null
		a(rsi) = mov 3100
		t48(rdi) = mov a(rsi)
		call toString return value = t47(rax)
		t50(rdi) = mov t47(rax)
		call println return value = null
		d(r8) = mov 7
		x(rsi) = mov 5
		y(r12) = mov 3
		t51(rdi) = mov d(r8)
		t51(rdi) = t51(rdi) MUL 1000
		t52(rbx) = mov x(rsi)
		t52(rbx) = t52(rbx) MUL 10
		t53(rdi) = t53(rdi) ADD t52(rbx)
		t54(rbx) = mov t53(rdi)
		t54(rbx) = t54(rbx) ADD y(r12)
		t56(rdi) = mov t54(rbx)
		call toString return value = t55(rax)
		t58(rdi) = mov t55(rax)
		call println return value = null
		cmp d(r8) 1
		set EQ t59(rbx)
		cmp t59(rbx) 1
		CJump EQ main_16_inline_exit
		t(rbx) = mov x(rsi)
		x(rsi) = mov y(r12)
		y(r12) = mov t(rbx)
		t60(rdi) = mov 1
		t62(rdx) = mov y(r12)
		call foo return value = null
		t63(rbx) = mov d(r8)
		t63(rbx) = t63(rbx) MUL 1000
		t64(rsi) = t64(rsi) MUL 10
		t65(rbx) = t65(rbx) ADD t64(rsi)
		t66(rsi) = mov t65(rbx)
		t66(rsi) = t66(rsi) ADD y(r12)
		t68(rdi) = mov t66(rsi)
		call toString return value = t67(rax)
		t70(rdi) = mov t67(rax)
		call println return value = null
		t34(rsi) = mov 10
		INC t34(rsi)
		t34(rsi) = t34(rsi) SHL 3
		malloc t33(rsi) t34(rsi)
		Address (t33(rsi) + 0) = mov 10
		t36(rsi) = mov 2
		INC t36(rsi)
		t36(rsi) = t36(rsi) SHL 3
		malloc t35(rsi) t36(rsi)
		Address (t35(rsi) + 0) = mov 2
		ret 0
		jump main_5_block_exit
	main_6_inline_enter
		a(rsi) = mov 3100
		t48(rdi) = mov a(rsi)
		call toString return value = t47(rax)
		t50(rdi) = mov t47(rax)
		call println return value = null
		d(r8) = mov 7
		x(rsi) = mov 5
		y(r12) = mov 3
		t51(rdi) = mov d(r8)
		t51(rdi) = t51(rdi) MUL 1000
		t52(rbx) = mov x(rsi)
		t52(rbx) = t52(rbx) MUL 10
		t53(rdi) = t53(rdi) ADD t52(rbx)
		t54(rbx) = mov t53(rdi)
		t54(rbx) = t54(rbx) ADD y(r12)
		t56(rdi) = mov t54(rbx)
		call toString return value = t55(rax)
		t58(rdi) = mov t55(rax)
		call println return value = null
		cmp d(r8) 1
		set EQ t59(rbx)
		cmp t59(rbx) 1
		CJump EQ main_16_inline_exit
		t(rbx) = mov x(rsi)
		x(rsi) = mov y(r12)
		y(r12) = mov t(rbx)
		t60(rdi) = mov 1
		t62(rdx) = mov y(r12)
		call foo return value = null
		t63(rbx) = mov d(r8)
		t63(rbx) = t63(rbx) MUL 1000
		t64(rsi) = t64(rsi) MUL 10
		t65(rbx) = t65(rbx) ADD t64(rsi)
		t66(rsi) = mov t65(rbx)
		t66(rsi) = t66(rsi) ADD y(r12)
		t68(rdi) = mov t66(rsi)
		call toString return value = t67(rax)
		t70(rdi) = mov t67(rax)
		call println return value = null
		t34(rsi) = mov 10
		INC t34(rsi)
		t34(rsi) = t34(rsi) SHL 3
		malloc t33(rsi) t34(rsi)
		Address (t33(rsi) + 0) = mov 10
		t36(rsi) = mov 2
		INC t36(rsi)
		t36(rsi) = t36(rsi) SHL 3
		malloc t35(rsi) t36(rsi)
		Address (t35(rsi) + 0) = mov 2
		ret 0
		jump main_5_block_exit
	main_10_loop_exit
		t48(rdi) = mov a(rsi)
		call toString return value = t47(rax)
		t50(rdi) = mov t47(rax)
		call println return value = null
		d(r8) = mov 7
		x(rsi) = mov 5
		y(r12) = mov 3
		t51(rdi) = mov d(r8)
		t51(rdi) = t51(rdi) MUL 1000
		t52(rbx) = mov x(rsi)
		t52(rbx) = t52(rbx) MUL 10
		t53(rdi) = t53(rdi) ADD t52(rbx)
		t54(rbx) = mov t53(rdi)
		t54(rbx) = t54(rbx) ADD y(r12)
		t56(rdi) = mov t54(rbx)
		call toString return value = t55(rax)
		t58(rdi) = mov t55(rax)
		call println return value = null
		cmp d(r8) 1
		set EQ t59(rbx)
		cmp t59(rbx) 1
		CJump EQ main_16_inline_exit
		t(rbx) = mov x(rsi)
		x(rsi) = mov y(r12)
		y(r12) = mov t(rbx)
		t60(rdi) = mov 1
		t62(rdx) = mov y(r12)
		call foo return value = null
		t63(rbx) = mov d(r8)
		t63(rbx) = t63(rbx) MUL 1000
		t64(rsi) = t64(rsi) MUL 10
		t65(rbx) = t65(rbx) ADD t64(rsi)
		t66(rsi) = mov t65(rbx)
		t66(rsi) = t66(rsi) ADD y(r12)
		t68(rdi) = mov t66(rsi)
		call toString return value = t67(rax)
		t70(rdi) = mov t67(rax)
		call println return value = null
		t34(rsi) = mov 10
		INC t34(rsi)
		t34(rsi) = t34(rsi) SHL 3
		malloc t33(rsi) t34(rsi)
		Address (t33(rsi) + 0) = mov 10
		t36(rsi) = mov 2
		INC t36(rsi)
		t36(rsi) = t36(rsi) SHL 3
		malloc t35(rsi) t36(rsi)
		Address (t35(rsi) + 0) = mov 2
		ret 0
		jump main_5_block_exit
	main_11_inline_exit
		d(r8) = mov 7
		x(rsi) = mov 5
		y(r12) = mov 3
		t51(rdi) = mov d(r8)
		t51(rdi) = t51(rdi) MUL 1000
		t52(rbx) = mov x(rsi)
		t52(rbx) = t52(rbx) MUL 10
		t53(rdi) = t53(rdi) ADD t52(rbx)
		t54(rbx) = mov t53(rdi)
		t54(rbx) = t54(rbx) ADD y(r12)
		t56(rdi) = mov t54(rbx)
		call toString return value = t55(rax)
		t58(rdi) = mov t55(rax)
		call println return value = null
		cmp d(r8) 1
		set EQ t59(rbx)
		cmp t59(rbx) 1
		CJump EQ main_16_inline_exit
		t(rbx) = mov x(rsi)
		x(rsi) = mov y(r12)
		y(r12) = mov t(rbx)
		t60(rdi) = mov 1
		t62(rdx) = mov y(r12)
		call foo return value = null
		t63(rbx) = mov d(r8)
		t63(rbx) = t63(rbx) MUL 1000
		t64(rsi) = t64(rsi) MUL 10
		t65(rbx) = t65(rbx) ADD t64(rsi)
		t66(rsi) = mov t65(rbx)
		t66(rsi) = t66(rsi) ADD y(r12)
		t68(rdi) = mov t66(rsi)
		call toString return value = t67(rax)
		t70(rdi) = mov t67(rax)
		call println return value = null
		t34(rsi) = mov 10
		INC t34(rsi)
		t34(rsi) = t34(rsi) SHL 3
		malloc t33(rsi) t34(rsi)
		Address (t33(rsi) + 0) = mov 10
		t36(rsi) = mov 2
		INC t36(rsi)
		t36(rsi) = t36(rsi) SHL 3
		malloc t35(rsi) t36(rsi)
		Address (t35(rsi) + 0) = mov 2
		ret 0
		jump main_5_block_exit
	main_12_inline_enter
		t51(rdi) = mov d(r8)
		t51(rdi) = t51(rdi) MUL 1000
		t52(rbx) = mov x(rsi)
		t52(rbx) = t52(rbx) MUL 10
		t53(rdi) = t53(rdi) ADD t52(rbx)
		t54(rbx) = mov t53(rdi)
		t54(rbx) = t54(rbx) ADD y(r12)
		t56(rdi) = mov t54(rbx)
		call toString return value = t55(rax)
		t58(rdi) = mov t55(rax)
		call println return value = null
		cmp d(r8) 1
		set EQ t59(rbx)
		cmp t59(rbx) 1
		CJump EQ main_16_inline_exit
		t(rbx) = mov x(rsi)
		x(rsi) = mov y(r12)
		y(r12) = mov t(rbx)
		t60(rdi) = mov 1
		t62(rdx) = mov y(r12)
		call foo return value = null
		t63(rbx) = mov d(r8)
		t63(rbx) = t63(rbx) MUL 1000
		t64(rsi) = t64(rsi) MUL 10
		t65(rbx) = t65(rbx) ADD t64(rsi)
		t66(rsi) = mov t65(rbx)
		t66(rsi) = t66(rsi) ADD y(r12)
		t68(rdi) = mov t66(rsi)
		call toString return value = t67(rax)
		t70(rdi) = mov t67(rax)
		call println return value = null
		t34(rsi) = mov 10
		INC t34(rsi)
		t34(rsi) = t34(rsi) SHL 3
		malloc t33(rsi) t34(rsi)
		Address (t33(rsi) + 0) = mov 10
		t36(rsi) = mov 2
		INC t36(rsi)
		t36(rsi) = t36(rsi) SHL 3
		malloc t35(rsi) t36(rsi)
		Address (t35(rsi) + 0) = mov 2
		ret 0
		jump main_5_block_exit
	main_15_if_exit
		t(rbx) = mov x(rsi)
		x(rsi) = mov y(r12)
		y(r12) = mov t(rbx)
		t60(rdi) = mov 1
		t62(rdx) = mov y(r12)
		call foo return value = null
		t63(rbx) = mov d(r8)
		t63(rbx) = t63(rbx) MUL 1000
		t64(rsi) = t64(rsi) MUL 10
		t65(rbx) = t65(rbx) ADD t64(rsi)
		t66(rsi) = mov t65(rbx)
		t66(rsi) = t66(rsi) ADD y(r12)
		t68(rdi) = mov t66(rsi)
		call toString return value = t67(rax)
		t70(rdi) = mov t67(rax)
		call println return value = null
		t34(rsi) = mov 10
		INC t34(rsi)
		t34(rsi) = t34(rsi) SHL 3
		malloc t33(rsi) t34(rsi)
		Address (t33(rsi) + 0) = mov 10
		t36(rsi) = mov 2
		INC t36(rsi)
		t36(rsi) = t36(rsi) SHL 3
		malloc t35(rsi) t36(rsi)
		Address (t35(rsi) + 0) = mov 2
		ret 0
		jump main_5_block_exit
	main_16_inline_exit
		t34(rsi) = mov 10
		INC t34(rsi)
		t34(rsi) = t34(rsi) SHL 3
		malloc t33(rsi) t34(rsi)
		Address (t33(rsi) + 0) = mov 10
		t36(rsi) = mov 2
		INC t36(rsi)
		t36(rsi) = t36(rsi) SHL 3
		malloc t35(rsi) t36(rsi)
		Address (t35(rsi) + 0) = mov 2
		ret 0
	main_5_block_exit
}
cost_a_lot_of_time {
	cost_a_lot_of_time_0_block_enter
		a(rsi) = mov 3100
		t41(rdi) = mov a(rsi)
		call toString return value = t40(rax)
		t43(rdi) = mov t40(rax)
		call println return value = null
		jump cost_a_lot_of_time_5_block_exit
	cost_a_lot_of_time_4_loop_exit
		t41(rdi) = mov a(rsi)
		call toString return value = t40(rax)
		t43(rdi) = mov t40(rax)
		call println return value = null
	cost_a_lot_of_time_5_block_exit
}
