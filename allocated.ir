__global_init {
	__global_init_1_block_exit
}
main {
	main_0_block_enter
		t1(rdi) = mov 100
		call fib return value = t0(rax)
		t4(rdi) = mov t0(rax)
		call println_Int return value = t3(rax)
	main_1_block_exit
}
fib x(r8) {
	fib_0_block_enter
		Address (t18(@fib_backup) + 0) = mov x(r8)
		t20(rsi) = mov x(r8)
		t20(rsi) = t20(rsi) SHL 3
		t21(r12) = mov t19(@fib_int)
		t21(r12) = t21(r12) ADD t20(rsi)
		cmp x(r8) 0
		CJump GREQ fib_1_fib_success
		x(r8) = mov t7(rdi)
		cmp x(r8) 2
		CJump LEEQ fib_5_if_true
		t9(rsi) = mov x(r8)
		t9(rsi) = t9(rsi) SUB 1
		t11(rdi) = mov t9(rsi)
		call fib return value = t10(rax)
		t12(rbx) = mov t10(rax)
		t13(rsi) = mov x(r8)
		t13(rsi) = t13(rsi) SUB 2
		t15(rdi) = mov t13(rsi)
		call fib return value = t14(rax)
		t16(rsi) = mov t14(rax)
		t17(rbx) = t17(rbx) ADD t16(rsi)
		ret t17(rbx)
		jump fib_8_block_exit
	fib_1_fib_success
		cmp x(r8) 200
		CJump LE fib_2_fib_escape
		x(r8) = mov t7(rdi)
		cmp x(r8) 2
		CJump LEEQ fib_5_if_true
		t9(rsi) = mov x(r8)
		t9(rsi) = t9(rsi) SUB 1
		t11(rdi) = mov t9(rsi)
		call fib return value = t10(rax)
		t12(rbx) = mov t10(rax)
		t13(rsi) = mov x(r8)
		t13(rsi) = t13(rsi) SUB 2
		t15(rdi) = mov t13(rsi)
		call fib return value = t14(rax)
		t16(rsi) = mov t14(rax)
		t17(rbx) = t17(rbx) ADD t16(rsi)
		ret t17(rbx)
		jump fib_8_block_exit
	fib_2_fib_escape
		cmp Address (t21(r12) + 0) 0
		CJump EQ fib_4_fib_start
		ret Address (t21(r12) + 0)
		jump fib_8_block_exit
	fib_3_fib_return
		ret Address (t21(r12) + 0)
		jump fib_8_block_exit
	fib_4_fib_start
		x(r8) = mov t7(rdi)
		cmp x(r8) 2
		CJump LEEQ fib_5_if_true
		t9(rsi) = mov x(r8)
		t9(rsi) = t9(rsi) SUB 1
		t11(rdi) = mov t9(rsi)
		call fib return value = t10(rax)
		t12(rbx) = mov t10(rax)
		t13(rsi) = mov x(r8)
		t13(rsi) = t13(rsi) SUB 2
		t15(rdi) = mov t13(rsi)
		call fib return value = t14(rax)
		t16(rsi) = mov t14(rax)
		t17(rbx) = t17(rbx) ADD t16(rsi)
		ret t17(rbx)
		jump fib_8_block_exit
	fib_5_if_true
		ret 1
		jump fib_8_block_exit
	fib_7_if_exit
		t9(rsi) = mov x(r8)
		t9(rsi) = t9(rsi) SUB 1
		t11(rdi) = mov t9(rsi)
		call fib return value = t10(rax)
		t12(rbx) = mov t10(rax)
		t13(rsi) = mov x(r8)
		t13(rsi) = t13(rsi) SUB 2
		t15(rdi) = mov t13(rsi)
		call fib return value = t14(rax)
		t16(rsi) = mov t14(rax)
		t17(rbx) = t17(rbx) ADD t16(rsi)
		ret t17(rbx)
	fib_8_block_exit
		cmp Address (t18(@fib_backup) + 0) 0
		CJump GREQ fib_9_fib_positive
	fib_9_fib_positive
		cmp Address (t18(@fib_backup) + 0) 200
		CJump LE fib_10_fib_update
	fib_10_fib_update
		Address (t21(r12) + 0) = mov t22(rax)
	fib_11_fib_fail
}
