__global_init {
	__global_init_0_block_enter
		jump __global_init_1_block_exit
	__global_init_1_block_exit
}
h a(rsi) {
	h_0_block_enter
		a(rsi) = mov t0(rdi)
		cmp a(rsi) 0
		set EQ t2(rbx)
		cmp t2(rbx) 1
		CJump EQ h_1_logical_true
		jump h_2_logical_false
	h_1_logical_true
		t1(rbx) = mov 1
		jump h_3_logical_exit
	h_2_logical_false
		cmp a(rsi) 1
		set EQ t3(rbx)
		t1(rbx) = mov t3(rbx)
		jump h_3_logical_exit
	h_3_logical_exit
		cmp t1(rbx) 1
		CJump EQ h_4_if_true
		jump h_5_if_false
	h_4_if_true
		ret 1
		jump h_11_block_exit
	h_5_if_false
		jump h_6_if_exit
	h_6_if_exit
		sum(rbx) = mov 0
		i(r12) = mov 0
		jump h_7_loop_condition
	h_7_loop_condition
		cmp i(r12) a(rsi)
		set LE t4(rdi)
		cmp t4(rdi) 1
		CJump EQ h_8_loop_body
		jump h_10_loop_exit
	h_8_loop_body
		t6(rdi) = mov i(r12)
		call h return value = t5(rax)
		t7(r8) = mov t5(rax)
		t8(rdi) = mov a(rsi)
		t8(rdi) = t8(rdi) SUB 1
		t9(rdi) = mov t8(rdi)
		t9(rdi) = t9(rdi) SUB i(r12)
		t11(rdi) = mov t9(rdi)
		call h return value = t10(rax)
		t12(rdi) = mov t10(rax)
		t13(r8) = mov t7(r8)
		t13(r8) = t13(r8) MUL t12(rdi)
		sum(rbx) = sum(rbx) ADD t13(r8)
		jump h_9_loop_increment
	h_9_loop_increment
		INC i(r12)
		jump h_7_loop_condition
	h_10_loop_exit
		ret sum(rbx)
		jump h_11_block_exit
	h_11_block_exit
}
main {
	main_0_block_enter
		a(rsi) = mov 17
		jump main_2_inline_enter
	main_2_inline_enter
		cmp a(rsi) 0
		set EQ t24(rbx)
		cmp t24(rbx) 1
		CJump EQ main_3_logical_true
		jump main_4_logical_false
	main_3_logical_true
		t23(rbx) = mov 1
		jump main_5_logical_exit
	main_4_logical_false
		cmp a(rsi) 1
		set EQ t25(rbx)
		t23(rbx) = mov t25(rbx)
		jump main_5_logical_exit
	main_5_logical_exit
		cmp t23(rbx) 1
		CJump EQ main_6_if_true
		jump main_7_if_false
	main_6_if_true
		t18(rsi) = mov 1
		jump main_13_inline_exit
	main_7_if_false
		jump main_8_if_exit
	main_8_if_exit
		sum(rbx) = mov 0
		i(r12) = mov 0
		jump main_9_loop_condition
	main_9_loop_condition
		cmp i(r12) a(rsi)
		set LE t26(rdi)
		cmp t26(rdi) 1
		CJump EQ main_10_loop_body
		jump main_12_loop_exit
	main_10_loop_body
		t28(rdi) = mov i(r12)
		call h return value = t27(rax)
		t29(r8) = mov t27(rax)
		t30(rdi) = mov a(rsi)
		t30(rdi) = t30(rdi) SUB 1
		t31(rdi) = mov t30(rdi)
		t31(rdi) = t31(rdi) SUB i(r12)
		t33(rdi) = mov t31(rdi)
		call h return value = t32(rax)
		t34(rdi) = mov t32(rax)
		t35(r8) = mov t29(r8)
		t35(r8) = t35(r8) MUL t34(rdi)
		sum(rbx) = sum(rbx) ADD t35(r8)
		jump main_11_loop_increment
	main_11_loop_increment
		INC i(r12)
		jump main_9_loop_condition
	main_12_loop_exit
		t18(rsi) = mov sum(rbx)
		jump main_13_inline_exit
	main_13_inline_exit
		t20(rdi) = mov t18(rsi)
		call println_Int return value = t19(rax)
		ret 0
		jump main_1_block_exit
	main_1_block_exit
}
