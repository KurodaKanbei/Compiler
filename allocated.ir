__global_init {
	__global_init_1_block_exit
}
main {
	main_0_block_enter
		t1(rsi) = mov 10
		INC t1(rsi)
		t1(rsi) = t1(rsi) SHL 3
		malloc t0(rsi) t1(rsi)
		Address (t0(rsi) + 0) = mov 10
		t0(rsi) = t0(rsi) ADD 8
		a(r12) = mov t0(rsi)
		i(r8) = mov 0
		cmp i(r8) 10
		CJump LE main_2_loop_body
		i(r8) = mov 0
		cmp i(r8) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_1_loop_condition
		cmp i(r8) 10
		CJump LE main_2_loop_body
		i(r8) = mov 0
		cmp i(r8) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_2_loop_body
		t3(rbx) = mov i(r8)
		t3(rbx) = t3(rbx) SHL 3
		t4(rsi) = mov a(r12)
		Address (t4(rsi) + t3(rbx)) = mov i(r8)
		INC i(r8)
		cmp i(r8) 10
		CJump LE main_2_loop_body
		i(r8) = mov 0
		cmp i(r8) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_3_loop_increment
		INC i(r8)
		cmp i(r8) 10
		CJump LE main_2_loop_body
		i(r8) = mov 0
		cmp i(r8) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_4_loop_exit
		i(r8) = mov 0
		cmp i(r8) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_5_loop_condition
		cmp i(r8) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_6_loop_body
		t7(rbx) = mov i(r8)
		t7(rbx) = t7(rbx) SHL 3
		t8(rsi) = mov a(r12)
		t10(rdi) = mov Address (t8(rsi) + t7(rbx))
		call println_Int return value = t9(rax)
		INC i(r8)
		cmp i(r8) 10
		CJump LE main_6_loop_body
		jump main_9_block_exit
	main_7_loop_increment
		INC i(r8)
		cmp i(r8) 10
		CJump LE main_6_loop_body
	main_9_block_exit
}
