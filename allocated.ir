__global_init {
	__global_init_1_block_exit
}
main {
	main_0_block_enter
		i(rsi) = i(rsi) XOR i(rsi)
		cmp i(rsi) 10
		CJump LE main_2_loop_body
		jump main_5_block_exit
	main_1_loop_condition
		cmp i(rsi) 10
		CJump LE main_2_loop_body
		jump main_5_block_exit
	main_2_loop_body
		t1(r9) = mov i(rsi)
		t1(r9) = t1(r9) SHL 3
		Address (a(rdi) + t1(r9)) = mov i(rsi)
		INC i(rsi)
		cmp i(rsi) 10
		CJump LE main_2_loop_body
		jump main_5_block_exit
	main_3_loop_increment
		INC i(rsi)
		cmp i(rsi) 10
		CJump LE main_2_loop_body
	main_5_block_exit
}
