__global_init {
	__global_init_0_block_enter
		jump __global_init_1_block_exit
	__global_init_1_block_exit
}
min a(null) b(null) {
	min_0_block_enter
		a(null) = mov t4(rdi)
		b(null) = mov t5(rsi)
		cmp a(null) b(null)
		set LEEQ t6(null)
		cmp t6(null) 1
		CJump EQ min_1_if_true
		jump min_2_if_false
	min_1_if_true
		ret a(null)
		jump min_4_block_exit
	min_2_if_false
		jump min_3_if_exit
	min_3_if_exit
		ret b(null)
		jump min_4_block_exit
	min_4_block_exit
}
main {
	main_0_block_enter
		x(null) = mov 10
		y(null) = mov 20
		t1(rdi) = mov x(null)
		t2(rsi) = mov y(null)
		call min return value = t0(rax)
		t3(null) = mov t0(rax)
		ret t3(null)
		jump main_1_block_exit
	main_1_block_exit
}
