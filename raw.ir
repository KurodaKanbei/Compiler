__global_init {
	__global_init_0_block_enter
		jump __global_init_1_block_exit
	__global_init_1_block_exit
}
h a(null) {
	h_0_block_enter
		a(null) = mov t0(rdi)
		cmp a(null) 0
		set EQ t2(null)
		cmp t2(null) 1
		CJump EQ h_1_logical_true
		jump h_2_logical_false
	h_1_logical_true
		t1(null) = mov 1
		jump h_3_logical_exit
	h_2_logical_false
		cmp a(null) 1
		set EQ t3(null)
		t1(null) = mov t3(null)
		jump h_3_logical_exit
	h_3_logical_exit
		cmp t1(null) 1
		CJump EQ h_4_if_true
		jump h_5_if_false
	h_4_if_true
		ret 1
		jump h_11_block_exit
	h_5_if_false
		jump h_6_if_exit
	h_6_if_exit
		sum(null) = mov 0
		i(null) = mov 0
		jump h_7_loop_condition
	h_7_loop_condition
		cmp i(null) a(null)
		set LE t4(null)
		cmp t4(null) 1
		CJump EQ h_8_loop_body
		jump h_10_loop_exit
	h_8_loop_body
		t6(rdi) = mov i(null)
		call h return value = t5(rax)
		t7(null) = mov t5(rax)
		t8(null) = mov a(null)
		t8(null) = t8(null) SUB 1
		t9(null) = mov t8(null)
		t9(null) = t9(null) SUB i(null)
		t11(rdi) = mov t9(null)
		call h return value = t10(rax)
		t12(null) = mov t10(rax)
		t13(null) = mov t7(null)
		t13(null) = t13(null) MUL t12(null)
		t14(null) = mov sum(null)
		t14(null) = t14(null) ADD t13(null)
		sum(null) = mov t14(null)
		jump h_9_loop_increment
	h_9_loop_increment
		t15(null) = mov i(null)
		INC i(null)
		jump h_7_loop_condition
	h_10_loop_exit
		ret sum(null)
		jump h_11_block_exit
	h_11_block_exit
}
main {
	main_0_block_enter
		a(null) = mov 17
		t17(rdi) = mov a(null)
		call h return value = t16(rax)
		t18(null) = mov t16(rax)
		t20(rdi) = mov t18(null)
		call toString return value = t19(rax)
		t21(null) = mov t19(rax)
		t22(rdi) = mov t21(null)
		call println return value = null
		ret 0
		jump main_1_block_exit
	main_1_block_exit
}
