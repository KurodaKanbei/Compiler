__global_init {
	__global_init_0_block_enter
		Address (asciiTable(@asciiTable) + 0) = mov __const_string_8
		jump __global_init_1_block_exit
	__global_init_1_block_exit
}
shift_l x(null) n(null) {
	shift_l_0_block_enter
		x(null) = mov t353(rdi)
		n(null) = mov t354(rsi)
		t355(null) = mov x(null)
		t355(null) = t355(null) SHL n(null)
		t357(rdi) = mov 65535
		t358(rsi) = mov 65535
		call hilo return value = t356(rax)
		t359(null) = mov t356(rax)
		t360(null) = mov t355(null)
		t360(null) = t360(null) AND t359(null)
		ret t360(null)
		jump shift_l_1_block_exit
	shift_l_1_block_exit
}
hilo hi(null) lo(null) {
	hilo_0_block_enter
		hi(null) = mov t361(rdi)
		lo(null) = mov t362(rsi)
		t363(null) = mov hi(null)
		t363(null) = t363(null) SHL 16
		t364(null) = mov lo(null)
		t364(null) = t364(null) OR t363(null)
		ret t364(null)
		jump hilo_1_block_exit
	hilo_1_block_exit
}
int2chr x(null) {
	int2chr_0_block_enter
		x(null) = mov t365(rdi)
		cmp x(null) 32
		set GREQ t367(null)
		cmp t367(null) 1
		CJump NEQ int2chr_2_logical_false
		jump int2chr_1_logical_true
	int2chr_1_logical_true
		cmp x(null) 126
		set LEEQ t368(null)
		t366(null) = mov t368(null)
		jump int2chr_3_logical_exit
	int2chr_2_logical_false
		t366(null) = mov 0
		jump int2chr_3_logical_exit
	int2chr_3_logical_exit
		cmp t366(null) 1
		CJump EQ int2chr_4_if_true
		jump int2chr_5_if_false
	int2chr_4_if_true
		t369(null) = mov x(null)
		t369(null) = t369(null) SUB 32
		t370(null) = mov x(null)
		t370(null) = t370(null) SUB 32
		t372(rdi) = mov Address (asciiTable(@asciiTable) + 0)
		t373(rsi) = mov t369(null)
		t374(rdx) = mov t370(null)
		call __string_substring return value = t371(rax)
		t375(null) = mov t371(rax)
		ret t375(null)
		jump int2chr_7_block_exit
	int2chr_5_if_false
		jump int2chr_6_if_exit
	int2chr_6_if_exit
		ret __const_string_7
		jump int2chr_7_block_exit
	int2chr_7_block_exit
}
assert expression(null) {
	assert_0_block_enter
		expression(null) = mov t264(rdi)
		t265(null) = mov expression(null)
		t265(null) = t265(null) XOR 1
		cmp t265(null) 1
		CJump EQ assert_1_if_true
		jump assert_2_if_false
	assert_1_if_true
		t266(rdi) = mov __const_string_5
		call println return value = null
		jump assert_3_if_exit
	assert_2_if_false
		jump assert_3_if_exit
	assert_3_if_exit
		jump assert_4_block_exit
	assert_4_block_exit
}
shift_r x(null) n(null) {
	shift_r_0_block_enter
		x(null) = mov t298(rdi)
		n(null) = mov t299(rsi)
		t301(rdi) = mov 32767
		t302(rsi) = mov 65535
		call hilo return value = t300(rax)
		t303(null) = mov t300(rax)
		tmp(null) = mov t303(null)
		t304(null) = mov tmp(null)
		t304(null) = t304(null) SHR n(null)
		t305(null) = mov t304(null)
		t305(null) = t305(null) SHL 1
		t306(null) = mov t305(null)
		t306(null) = t306(null) ADD 1
		tmp(null) = mov t306(null)
		t307(null) = mov x(null)
		t307(null) = t307(null) SHR n(null)
		t308(null) = mov tmp(null)
		t308(null) = t308(null) AND t307(null)
		tmp(null) = mov t308(null)
		t310(rdi) = mov 65535
		t311(rsi) = mov 65535
		call hilo return value = t309(rax)
		t312(null) = mov t309(rax)
		t313(null) = mov tmp(null)
		t313(null) = t313(null) AND t312(null)
		ret t313(null)
		jump shift_r_1_block_exit
	shift_r_1_block_exit
}
xorshift seed(null) {
	xorshift_0_block_enter
		seed(null) = mov t314(rdi)
		x(null) = mov seed(null)
		t316(rdi) = mov x(null)
		t317(rsi) = mov 13
		call shift_l return value = t315(rax)
		t318(null) = mov t315(rax)
		t319(null) = mov x(null)
		t319(null) = t319(null) XOR t318(null)
		x(null) = mov t319(null)
		t321(rdi) = mov x(null)
		t322(rsi) = mov 17
		call shift_r return value = t320(rax)
		t323(null) = mov t320(rax)
		t324(null) = mov x(null)
		t324(null) = t324(null) XOR t323(null)
		x(null) = mov t324(null)
		t326(rdi) = mov x(null)
		t327(rsi) = mov 5
		call shift_l return value = t325(rax)
		t328(null) = mov t325(rax)
		t329(null) = mov x(null)
		t329(null) = t329(null) XOR t328(null)
		x(null) = mov t329(null)
		ret x(null)
		jump xorshift_1_block_exit
	xorshift_1_block_exit
}
main {
	main_0_block_enter
		call getInt return value = t0(rax)
		t1(null) = mov t0(rax)
		seed(null) = mov t1(null)
		call getInt return value = t2(rax)
		t3(null) = mov t2(rax)
		l(null) = mov t3(null)
		call getInt return value = t4(rax)
		t5(null) = mov t4(rax)
		r(null) = mov t5(null)
		call getInt return value = t6(rax)
		t7(null) = mov t6(rax)
		P(null) = mov t7(null)
		t8(null) = mov seed(null)
		t8(null) = t8(null) ADD 1
		t10(rdi) = mov t8(null)
		call xorshift10 return value = t9(rax)
		t11(null) = mov t9(rax)
		seed(null) = mov t11(null)
		t13(rdi) = mov 32767
		t14(rsi) = mov 65535
		call hilo return value = t12(rax)
		t15(null) = mov t12(rax)
		INT_MAX(null) = mov t15(null)
		r1(null) = mov 0
		r2(null) = mov 0
		r3(null) = mov 0
		r4(null) = mov 0
		d(null) = mov 0
		i(null) = mov l(null)
		jump main_1_loop_condition
	main_1_loop_condition
		cmp i(null) r(null)
		set LE t16(null)
		cmp t16(null) 1
		CJump EQ main_2_loop_body
		jump main_13_loop_exit
	main_2_loop_body
		t18(rdi) = mov seed(null)
		call xorshift return value = t17(rax)
		t19(null) = mov t17(rax)
		seed(null) = mov t19(null)
		t20(null) = mov seed(null)
		t20(null) = t20(null) AND INT_MAX(null)
		v1(null) = mov t20(null)
		t22(rdi) = mov seed(null)
		call xorshift return value = t21(rax)
		t23(null) = mov t21(rax)
		seed(null) = mov t23(null)
		t24(null) = mov seed(null)
		t24(null) = t24(null) AND INT_MAX(null)
		v2(null) = mov t24(null)
		t26(rdi) = mov seed(null)
		call xorshift return value = t25(rax)
		t27(null) = mov t25(rax)
		seed(null) = mov t27(null)
		t28(null) = mov seed(null)
		t28(null) = t28(null) AND INT_MAX(null)
		v3(null) = mov t28(null)
		t30(rdi) = mov seed(null)
		call xorshift return value = t29(rax)
		t31(null) = mov t29(rax)
		seed(null) = mov t31(null)
		t32(null) = mov seed(null)
		t32(null) = t32(null) AND INT_MAX(null)
		v4(null) = mov t32(null)
		t34(rdi) = mov seed(null)
		call xorshift return value = t33(rax)
		t35(null) = mov t33(rax)
		seed(null) = mov t35(null)
		t36(null) = mov seed(null)
		t36(null) = t36(null) AND INT_MAX(null)
		v5(null) = mov t36(null)
		t38(rdi) = mov seed(null)
		call xorshift return value = t37(rax)
		t39(null) = mov t37(rax)
		seed(null) = mov t39(null)
		t40(null) = mov seed(null)
		t40(null) = t40(null) AND INT_MAX(null)
		v6(null) = mov t40(null)
		t41(null) = mov v1(null)
		t41(null) = t41(null) XOR v2(null)
		t42(null) = mov t41(null)
		t42(null) = t42(null) XOR v3(null)
		a1(null) = mov t42(null)
		t43(null) = mov v4(null)
		t43(null) = t43(null) XOR v5(null)
		t44(null) = mov t43(null)
		t44(null) = t44(null) XOR v6(null)
		t45(null) = mov a1(null)
		t45(null) = t45(null) XOR t44(null)
		a1(null) = mov t45(null)
		t46(null) = mov a1(null)
		t46(null) = t46(null) AND INT_MAX(null)
		a1(null) = mov t46(null)
		t47(null) = mov v1(null)
		t47(null) = t47(null) ADD v2(null)
		t48(null) = mov t47(null)
		t48(null) = t48(null) ADD v3(null)
		t49(null) = mov t48(null)
		t49(null) = t49(null) ADD 1
		a2(null) = mov t49(null)
		t50(null) = mov v4(null)
		t50(null) = t50(null) ADD v5(null)
		t51(null) = mov t50(null)
		t51(null) = t51(null) ADD v6(null)
		t52(null) = mov a2(null)
		t52(null) = t52(null) SUB t51(null)
		a2(null) = mov t52(null)
		t53(null) = mov a2(null)
		t53(null) = t53(null) AND INT_MAX(null)
		a2(null) = mov t53(null)
		t54(null) = mov v1(null)
		t54(null) = t54(null) MOD P(null)
		t55(null) = mov v2(null)
		t55(null) = t55(null) MOD P(null)
		t56(null) = mov t54(null)
		t56(null) = t56(null) MUL t55(null)
		t57(null) = mov v3(null)
		t57(null) = t57(null) MOD P(null)
		t58(null) = mov t56(null)
		t58(null) = t58(null) MUL t57(null)
		a3(null) = mov t58(null)
		t59(null) = mov v4(null)
		t59(null) = t59(null) MOD P(null)
		t60(null) = mov a3(null)
		t60(null) = t60(null) MUL t59(null)
		t61(null) = mov v5(null)
		t61(null) = t61(null) MOD P(null)
		t62(null) = mov t60(null)
		t62(null) = t62(null) MUL t61(null)
		t63(null) = mov v6(null)
		t63(null) = t63(null) MOD P(null)
		t64(null) = mov t62(null)
		t64(null) = t64(null) MUL t63(null)
		a3(null) = mov t64(null)
		t65(null) = mov a3(null)
		t65(null) = t65(null) AND INT_MAX(null)
		a3(null) = mov t65(null)
		t66(null) = mov v1(null)
		t66(null) = t66(null) XOR v2(null)
		t67(null) = mov t66(null)
		t67(null) = t67(null) XOR v3(null)
		t68(null) = mov v4(null)
		t68(null) = t68(null) XOR v5(null)
		t69(null) = mov t68(null)
		t69(null) = t69(null) XOR v6(null)
		cmp t67(null) t69(null)
		set GR t70(null)
		cmp t70(null) 1
		CJump EQ main_3_if_true
		jump main_4_if_false
	main_3_if_true
		t71(null) = mov v1(null)
		t71(null) = t71(null) ADD v2(null)
		t72(null) = mov t71(null)
		t72(null) = t72(null) AND INT_MAX(null)
		t73(null) = mov t72(null)
		t73(null) = t73(null) MOD P(null)
		t74(null) = mov v3(null)
		t74(null) = t74(null) MOD P(null)
		t75(null) = mov t74(null)
		t75(null) = t75(null) ADD 1
		t76(null) = mov t73(null)
		t76(null) = t76(null) MOD t75(null)
		a4(null) = mov t76(null)
		jump main_5_if_exit
	main_4_if_false
		t77(null) = mov v3(null)
		t77(null) = t77(null) ADD v2(null)
		t78(null) = mov t77(null)
		t78(null) = t78(null) AND INT_MAX(null)
		t79(null) = mov t78(null)
		t79(null) = t79(null) MOD P(null)
		t80(null) = mov v1(null)
		t80(null) = t80(null) MOD P(null)
		t81(null) = mov t80(null)
		t81(null) = t81(null) ADD 1
		t82(null) = mov t79(null)
		t82(null) = t82(null) MOD t81(null)
		a4(null) = mov t82(null)
		jump main_5_if_exit
	main_5_if_exit
		t83(null) = mov a1(null)
		t83(null) = t83(null) XOR 10001
		t85(rdi) = mov t83(null)
		call xorshift10 return value = t84(rax)
		t86(null) = mov t84(rax)
		t87(null) = mov r1(null)
		t87(null) = t87(null) ADD t86(null)
		r1(null) = mov t87(null)
		t88(null) = mov a2(null)
		t88(null) = t88(null) XOR 10002
		t90(rdi) = mov t88(null)
		call xorshift10 return value = t89(rax)
		t91(null) = mov t89(rax)
		t92(null) = mov r2(null)
		t92(null) = t92(null) ADD t91(null)
		r2(null) = mov t92(null)
		t93(null) = mov a3(null)
		t93(null) = t93(null) XOR 10003
		t95(rdi) = mov t93(null)
		call xorshift10 return value = t94(rax)
		t96(null) = mov t94(rax)
		t97(null) = mov r3(null)
		t97(null) = t97(null) ADD t96(null)
		r3(null) = mov t97(null)
		t98(null) = mov a4(null)
		t98(null) = t98(null) XOR 10004
		t100(rdi) = mov t98(null)
		call xorshift10 return value = t99(rax)
		t101(null) = mov t99(rax)
		t102(null) = mov r4(null)
		t102(null) = t102(null) ADD t101(null)
		r4(null) = mov t102(null)
		t103(null) = mov v4(null)
		t103(null) = t103(null) XOR v2(null)
		t104(null) = mov t103(null)
		t104(null) = t104(null) XOR v3(null)
		b1(null) = mov t104(null)
		t105(null) = mov b1(null)
		t105(null) = t105(null) XOR v1(null)
		t106(null) = mov t105(null)
		t106(null) = t106(null) XOR v6(null)
		t107(null) = mov t106(null)
		t107(null) = t107(null) XOR v5(null)
		b1(null) = mov t107(null)
		t108(null) = mov b1(null)
		t108(null) = t108(null) AND INT_MAX(null)
		b1(null) = mov t108(null)
		t109(null) = mov v4(null)
		NEG t109(null)
		t110(null) = mov t109(null)
		t110(null) = t110(null) ADD v2(null)
		t111(null) = mov t110(null)
		t111(null) = t111(null) ADD v3(null)
		b2(null) = mov t111(null)
		t112(null) = mov b2(null)
		t112(null) = t112(null) ADD v1(null)
		t113(null) = mov t112(null)
		t113(null) = t113(null) SUB v6(null)
		t114(null) = mov t113(null)
		t114(null) = t114(null) SUB v5(null)
		t115(null) = mov t114(null)
		t115(null) = t115(null) ADD 1
		b2(null) = mov t115(null)
		t116(null) = mov b2(null)
		t116(null) = t116(null) AND INT_MAX(null)
		b2(null) = mov t116(null)
		t117(null) = mov v4(null)
		t117(null) = t117(null) MOD P(null)
		t118(null) = mov v2(null)
		t118(null) = t118(null) MOD P(null)
		t119(null) = mov t117(null)
		t119(null) = t119(null) MUL t118(null)
		t120(null) = mov v3(null)
		t120(null) = t120(null) MOD P(null)
		t121(null) = mov t119(null)
		t121(null) = t121(null) MUL t120(null)
		b3(null) = mov t121(null)
		t122(null) = mov v1(null)
		t122(null) = t122(null) MOD P(null)
		t123(null) = mov b3(null)
		t123(null) = t123(null) MUL t122(null)
		t124(null) = mov v6(null)
		t124(null) = t124(null) MOD P(null)
		t125(null) = mov t123(null)
		t125(null) = t125(null) MUL t124(null)
		t126(null) = mov v5(null)
		t126(null) = t126(null) MOD P(null)
		t127(null) = mov t125(null)
		t127(null) = t127(null) MUL t126(null)
		b3(null) = mov t127(null)
		t128(null) = mov b3(null)
		t128(null) = t128(null) AND INT_MAX(null)
		b3(null) = mov t128(null)
		t129(null) = mov v1(null)
		t129(null) = t129(null) XOR v2(null)
		t130(null) = mov t129(null)
		t130(null) = t130(null) XOR v3(null)
		t131(null) = mov v4(null)
		t131(null) = t131(null) XOR v5(null)
		t132(null) = mov t131(null)
		t132(null) = t132(null) XOR v6(null)
		cmp t130(null) t132(null)
		set LEEQ t133(null)
		cmp t133(null) 1
		CJump EQ main_6_if_true
		jump main_7_if_false
	main_6_if_true
		t134(null) = mov v3(null)
		t134(null) = t134(null) ADD v2(null)
		t135(null) = mov t134(null)
		t135(null) = t135(null) AND INT_MAX(null)
		t136(null) = mov t135(null)
		t136(null) = t136(null) MOD P(null)
		t137(null) = mov v1(null)
		t137(null) = t137(null) MOD P(null)
		t138(null) = mov t137(null)
		t138(null) = t138(null) ADD 1
		t139(null) = mov t136(null)
		t139(null) = t139(null) MOD t138(null)
		b4(null) = mov t139(null)
		jump main_8_if_exit
	main_7_if_false
		t140(null) = mov v1(null)
		t140(null) = t140(null) ADD v2(null)
		t141(null) = mov t140(null)
		t141(null) = t141(null) AND INT_MAX(null)
		t142(null) = mov t141(null)
		t142(null) = t142(null) MOD P(null)
		t143(null) = mov v3(null)
		t143(null) = t143(null) MOD P(null)
		t144(null) = mov t143(null)
		t144(null) = t144(null) ADD 1
		t145(null) = mov t142(null)
		t145(null) = t145(null) MOD t144(null)
		b4(null) = mov t145(null)
		jump main_8_if_exit
	main_8_if_exit
		t146(null) = mov b1(null)
		t146(null) = t146(null) XOR 10001
		t148(rdi) = mov t146(null)
		call xorshift10 return value = t147(rax)
		t149(null) = mov t147(rax)
		t150(null) = mov r1(null)
		t150(null) = t150(null) ADD t149(null)
		r1(null) = mov t150(null)
		t151(null) = mov b2(null)
		t151(null) = t151(null) XOR 10002
		t153(rdi) = mov t151(null)
		call xorshift10 return value = t152(rax)
		t154(null) = mov t152(rax)
		t155(null) = mov r2(null)
		t155(null) = t155(null) ADD t154(null)
		r2(null) = mov t155(null)
		t156(null) = mov b3(null)
		t156(null) = t156(null) XOR 10003
		t158(rdi) = mov t156(null)
		call xorshift10 return value = t157(rax)
		t159(null) = mov t157(rax)
		t160(null) = mov r3(null)
		t160(null) = t160(null) ADD t159(null)
		r3(null) = mov t160(null)
		t161(null) = mov b4(null)
		t161(null) = t161(null) XOR 10004
		t163(rdi) = mov t161(null)
		call xorshift10 return value = t162(rax)
		t164(null) = mov t162(rax)
		t165(null) = mov r4(null)
		t165(null) = t165(null) ADD t164(null)
		r4(null) = mov t165(null)
		t166(null) = mov v4(null)
		t166(null) = t166(null) XOR v1(null)
		t167(null) = mov t166(null)
		t167(null) = t167(null) XOR v3(null)
		c1(null) = mov t167(null)
		t168(null) = mov c1(null)
		t168(null) = t168(null) XOR v2(null)
		t169(null) = mov t168(null)
		t169(null) = t169(null) XOR v6(null)
		t170(null) = mov t169(null)
		t170(null) = t170(null) XOR v5(null)
		c1(null) = mov t170(null)
		t171(null) = mov c1(null)
		t171(null) = t171(null) AND INT_MAX(null)
		c1(null) = mov t171(null)
		t172(null) = mov v4(null)
		t172(null) = t172(null) SUB v2(null)
		t173(null) = mov v3(null)
		NEG t173(null)
		t174(null) = mov t172(null)
		t174(null) = t174(null) ADD t173(null)
		c2(null) = mov t174(null)
		t175(null) = mov c2(null)
		t175(null) = t175(null) SUB v1(null)
		t176(null) = mov t175(null)
		t176(null) = t176(null) ADD v6(null)
		t177(null) = mov t176(null)
		t177(null) = t177(null) ADD v5(null)
		t178(null) = mov t177(null)
		t178(null) = t178(null) SUB 1
		c2(null) = mov t178(null)
		t179(null) = mov c2(null)
		NEG t179(null)
		t180(null) = mov t179(null)
		t180(null) = t180(null) AND INT_MAX(null)
		c2(null) = mov t180(null)
		t181(null) = mov v4(null)
		t181(null) = t181(null) MOD P(null)
		t182(null) = mov v5(null)
		t182(null) = t182(null) MOD P(null)
		t183(null) = mov t181(null)
		t183(null) = t183(null) MUL t182(null)
		t184(null) = mov v6(null)
		t184(null) = t184(null) MOD P(null)
		t185(null) = mov t183(null)
		t185(null) = t185(null) MUL t184(null)
		c3(null) = mov t185(null)
		t186(null) = mov v1(null)
		t186(null) = t186(null) MOD P(null)
		t187(null) = mov c3(null)
		t187(null) = t187(null) MUL t186(null)
		t188(null) = mov v2(null)
		t188(null) = t188(null) MOD P(null)
		t189(null) = mov t187(null)
		t189(null) = t189(null) MUL t188(null)
		t190(null) = mov v3(null)
		t190(null) = t190(null) MOD P(null)
		t191(null) = mov t189(null)
		t191(null) = t191(null) MUL t190(null)
		c3(null) = mov t191(null)
		t192(null) = mov c3(null)
		t192(null) = t192(null) AND INT_MAX(null)
		c3(null) = mov t192(null)
		t193(null) = mov v4(null)
		t193(null) = t193(null) XOR v5(null)
		t194(null) = mov t193(null)
		t194(null) = t194(null) XOR v6(null)
		t195(null) = mov v3(null)
		t195(null) = t195(null) XOR v2(null)
		t196(null) = mov t195(null)
		t196(null) = t196(null) XOR v1(null)
		cmp t194(null) t196(null)
		set LE t197(null)
		cmp t197(null) 1
		CJump EQ main_9_if_true
		jump main_10_if_false
	main_9_if_true
		t198(null) = mov v1(null)
		t198(null) = t198(null) ADD v2(null)
		t199(null) = mov t198(null)
		t199(null) = t199(null) AND INT_MAX(null)
		t200(null) = mov t199(null)
		t200(null) = t200(null) MOD P(null)
		t201(null) = mov v3(null)
		t201(null) = t201(null) MOD P(null)
		t202(null) = mov t201(null)
		t202(null) = t202(null) ADD 1
		t203(null) = mov t200(null)
		t203(null) = t203(null) MOD t202(null)
		c4(null) = mov t203(null)
		jump main_11_if_exit
	main_10_if_false
		t204(null) = mov v3(null)
		t204(null) = t204(null) ADD v2(null)
		t205(null) = mov t204(null)
		t205(null) = t205(null) AND INT_MAX(null)
		t206(null) = mov t205(null)
		t206(null) = t206(null) MOD P(null)
		t207(null) = mov v1(null)
		t207(null) = t207(null) MOD P(null)
		t208(null) = mov t207(null)
		t208(null) = t208(null) ADD 1
		t209(null) = mov t206(null)
		t209(null) = t209(null) MOD t208(null)
		c4(null) = mov t209(null)
		jump main_11_if_exit
	main_11_if_exit
		t210(null) = mov c1(null)
		t210(null) = t210(null) XOR 10001
		t212(rdi) = mov t210(null)
		call xorshift10 return value = t211(rax)
		t213(null) = mov t211(rax)
		t214(null) = mov r1(null)
		t214(null) = t214(null) ADD t213(null)
		r1(null) = mov t214(null)
		t215(null) = mov c2(null)
		t215(null) = t215(null) XOR 10002
		t217(rdi) = mov t215(null)
		call xorshift10 return value = t216(rax)
		t218(null) = mov t216(rax)
		t219(null) = mov r2(null)
		t219(null) = t219(null) ADD t218(null)
		r2(null) = mov t219(null)
		t220(null) = mov c3(null)
		t220(null) = t220(null) XOR 10003
		t222(rdi) = mov t220(null)
		call xorshift10 return value = t221(rax)
		t223(null) = mov t221(rax)
		t224(null) = mov r3(null)
		t224(null) = t224(null) ADD t223(null)
		r3(null) = mov t224(null)
		t225(null) = mov c4(null)
		t225(null) = t225(null) XOR 10004
		t227(rdi) = mov t225(null)
		call xorshift10 return value = t226(rax)
		t228(null) = mov t226(rax)
		t229(null) = mov r4(null)
		t229(null) = t229(null) ADD t228(null)
		r4(null) = mov t229(null)
		jump main_12_loop_increment
	main_12_loop_increment
		t230(null) = mov i(null)
		INC i(null)
		jump main_1_loop_condition
	main_13_loop_exit
		t232(rdi) = mov r1(null)
		call toStringHex return value = t231(rax)
		t233(null) = mov t231(rax)
		t235(rdi) = mov t233(null)
		t236(rsi) = mov __const_string_0
		call __string_connection return value = t234(rax)
		t237(null) = mov t234(rax)
		t238(rdi) = mov t237(null)
		call print return value = null
		t240(rdi) = mov r2(null)
		call toStringHex return value = t239(rax)
		t241(null) = mov t239(rax)
		t243(rdi) = mov t241(null)
		t244(rsi) = mov __const_string_1
		call __string_connection return value = t242(rax)
		t245(null) = mov t242(rax)
		t246(rdi) = mov t245(null)
		call print return value = null
		t248(rdi) = mov r3(null)
		call toStringHex return value = t247(rax)
		t249(null) = mov t247(rax)
		t251(rdi) = mov t249(null)
		t252(rsi) = mov __const_string_2
		call __string_connection return value = t250(rax)
		t253(null) = mov t250(rax)
		t254(rdi) = mov t253(null)
		call print return value = null
		t256(rdi) = mov r4(null)
		call toStringHex return value = t255(rax)
		t257(null) = mov t255(rax)
		t259(rdi) = mov t257(null)
		t260(rsi) = mov __const_string_3
		call __string_connection return value = t258(rax)
		t261(null) = mov t258(rax)
		t262(rdi) = mov t261(null)
		call print return value = null
		t263(rdi) = mov __const_string_4
		call println return value = null
		ret 0
		jump main_14_block_exit
	main_14_block_exit
}
xorshift10 seed(null) {
	xorshift10_0_block_enter
		seed(null) = mov t267(rdi)
		x(null) = mov seed(null)
		t269(rdi) = mov x(null)
		call xorshift return value = t268(rax)
		t270(null) = mov t268(rax)
		x(null) = mov t270(null)
		t272(rdi) = mov x(null)
		call xorshift return value = t271(rax)
		t273(null) = mov t271(rax)
		x(null) = mov t273(null)
		t275(rdi) = mov x(null)
		call xorshift return value = t274(rax)
		t276(null) = mov t274(rax)
		x(null) = mov t276(null)
		t278(rdi) = mov x(null)
		call xorshift return value = t277(rax)
		t279(null) = mov t277(rax)
		x(null) = mov t279(null)
		t281(rdi) = mov x(null)
		call xorshift return value = t280(rax)
		t282(null) = mov t280(rax)
		x(null) = mov t282(null)
		t284(rdi) = mov x(null)
		call xorshift return value = t283(rax)
		t285(null) = mov t283(rax)
		x(null) = mov t285(null)
		t287(rdi) = mov x(null)
		call xorshift return value = t286(rax)
		t288(null) = mov t286(rax)
		x(null) = mov t288(null)
		t290(rdi) = mov x(null)
		call xorshift return value = t289(rax)
		t291(null) = mov t289(rax)
		x(null) = mov t291(null)
		t293(rdi) = mov x(null)
		call xorshift return value = t292(rax)
		t294(null) = mov t292(rax)
		x(null) = mov t294(null)
		t296(rdi) = mov x(null)
		call xorshift return value = t295(rax)
		t297(null) = mov t295(rax)
		x(null) = mov t297(null)
		ret x(null)
		jump xorshift10_1_block_exit
	xorshift10_1_block_exit
}
toStringHex x(null) {
	toStringHex_0_block_enter
		x(null) = mov t330(rdi)
		ret(null) = mov __const_string_6
		i(null) = mov 28
		jump toStringHex_1_loop_condition
	toStringHex_1_loop_condition
		cmp i(null) 0
		set GREQ t331(null)
		cmp t331(null) 1
		CJump EQ toStringHex_2_loop_body
		jump toStringHex_7_loop_exit
	toStringHex_2_loop_body
		t332(null) = mov x(null)
		t332(null) = t332(null) SHR i(null)
		t333(null) = mov t332(null)
		t333(null) = t333(null) AND 15
		digit(null) = mov t333(null)
		cmp digit(null) 10
		set LE t334(null)
		cmp t334(null) 1
		CJump EQ toStringHex_3_if_true
		jump toStringHex_4_if_false
	toStringHex_3_if_true
		t335(null) = mov 48
		t335(null) = t335(null) ADD digit(null)
		t337(rdi) = mov t335(null)
		call int2chr return value = t336(rax)
		t338(null) = mov t336(rax)
		t340(rdi) = mov ret(null)
		t341(rsi) = mov t338(null)
		call __string_connection return value = t339(rax)
		t342(null) = mov t339(rax)
		ret(null) = mov t342(null)
		jump toStringHex_5_if_exit
	toStringHex_4_if_false
		t343(null) = mov 65
		t343(null) = t343(null) ADD digit(null)
		t344(null) = mov t343(null)
		t344(null) = t344(null) SUB 10
		t346(rdi) = mov t344(null)
		call int2chr return value = t345(rax)
		t347(null) = mov t345(rax)
		t349(rdi) = mov ret(null)
		t350(rsi) = mov t347(null)
		call __string_connection return value = t348(rax)
		t351(null) = mov t348(rax)
		ret(null) = mov t351(null)
		jump toStringHex_5_if_exit
	toStringHex_5_if_exit
		jump toStringHex_6_loop_increment
	toStringHex_6_loop_increment
		t352(null) = mov i(null)
		t352(null) = t352(null) SUB 4
		i(null) = mov t352(null)
		jump toStringHex_1_loop_condition
	toStringHex_7_loop_exit
		ret ret(null)
		jump toStringHex_8_block_exit
	toStringHex_8_block_exit
}
